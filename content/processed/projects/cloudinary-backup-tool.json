{
  "content": "<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Needed to backup thousands of photos from Cloudinary, so I built a little desktop app with Tauri. It handles batch downloads without eating all your RAM and lets you resume if something goes wrong.</p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><img src=\"https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_800/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png\" alt=\"\" srcset=\"https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_400/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png 400w,\n      https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_800/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png 800w,\n      https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_1200/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png 1200w\" sizes=\"(min-width: 768px) 80vw, 100vw\" loading=\"lazy\" decoding=\"async\" class=\"w-full max-w-full mx-auto w-full max-w-full mx-auto transition-all duration-300 ease-in-out pr-2 py-2 md:pr-6 md:py-4 lg:pr-12 lg:py-6 animate-on-scroll slide-from-bottom will-change-transform\" crossorigin=\"anonymous\" style=\"display: block; max-width: 100%;\"></p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">The Rust backend does the heavy lifting while the web frontend keeps things simple. Added some basic credential storage with XOR encryption - nothing fancy, just enough to not leave API keys lying around in plaintext.</p>",
  "html": "<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Needed to backup thousands of photos from Cloudinary, so I built a little desktop app with Tauri. It handles batch downloads without eating all your RAM and lets you resume if something goes wrong.</p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><img src=\"https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_800/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png\" alt=\"\" srcset=\"https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_400/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png 400w,\n      https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_800/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png 800w,\n      https://res.cloudinary.com/ejf/image/upload/c_scale,f_auto,q_auto:good,w_1200/v1736967824/Screenshot_2025-01-15_at_3.23.17_PM.png 1200w\" sizes=\"(min-width: 768px) 80vw, 100vw\" loading=\"lazy\" decoding=\"async\" class=\"w-full max-w-full mx-auto w-full max-w-full mx-auto transition-all duration-300 ease-in-out pr-2 py-2 md:pr-6 md:py-4 lg:pr-12 lg:py-6 animate-on-scroll slide-from-bottom will-change-transform\" crossorigin=\"anonymous\" style=\"display: block; max-width: 100%;\"></p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">The Rust backend does the heavy lifting while the web frontend keeps things simple. Added some basic credential storage with XOR encryption - nothing fancy, just enough to not leave API keys lying around in plaintext.</p>",
  "title": "Cloudinary Backup Tool",
  "metadata": {
    "title": "Cloudinary Backup Tool",
    "date": "2025-01-15T00:00:00.000Z",
    "github": "https://github.com/ejfox/cloudinary-backup-tool",
    "tech": [
      "Tauri",
      "Rust",
      "TypeScript",
      "Vite"
    ],
    "words": 72,
    "images": 1,
    "links": 1,
    "codeBlocks": 0,
    "headers": {},
    "toc": [],
    "type": "post",
    "sourcePath": "../../../../../code/website2/content/blog/projects/cloudinary-backup-tool.md",
    "sourceDir": "/Users/ejfox/Library/Mobile Documents/iCloud~md~obsidian/Documents/ejfox/"
  }
}