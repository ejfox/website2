{
  "slug": "drafts/photoblog-with-cloudinary-nuxt",
  "draft": true,
  "dek": "In which we use Cloudinary both as a host and CMS to show photos that we took to our friends",
  "inprogress": true,
  "date": "2022-12-05T23:34:09.000Z",
  "modified": "2024-07-18T18:30:19.000Z",
  "tags": [
    "automation"
  ],
  "hidden": true,
  "title": "Creating a photoblog with Cloudinary and Nuxt",
  "toc": [
    {
      "text": "Creating a photoblog with Cloudinary and Nuxt",
      "slug": "creating-a-photoblog-with-cloudinary-and-nuxt",
      "level": "h2",
      "children": []
    },
    {
      "text": "Automator Actions",
      "slug": "automator-actions",
      "level": "h2",
      "children": [
        {
          "text": "Automatically uploading screenshots",
          "slug": "automatically-uploading-screenshots",
          "level": "h3",
          "children": []
        }
      ]
    },
    {
      "text": "Upload all green-tagged files to Cloudinary through Folder Action",
      "slug": "upload-all-green-tagged-files-to-cloudinary-through-folder-action",
      "level": "h2",
      "children": [
        {
          "text": "Getting EXIF data from a resource",
          "slug": "getting-exif-data-from-a-resource",
          "level": "h3",
          "children": []
        },
        {
          "text": "All media starts in ",
          "slug": "all-media-starts-in",
          "level": "h3",
          "children": []
        },
        {
          "text": "Apple Shortcuts & Automator",
          "slug": "apple-shortcuts-automator",
          "level": "h3",
          "children": []
        },
        {
          "text": "Get all Cloudinary photos for a week",
          "slug": "get-all-cloudinary-photos-for-a-week",
          "level": "h3",
          "children": []
        }
      ]
    }
  ],
  "wordCount": 1643,
  "readingTime": 7,
  "imageCount": 1,
  "linkCount": 2,
  "content": "<ol>\n<li>I upload files to Cloudinary through automator actions paired with bash scripts</li>\n<li>I use the Cloudinary JS SDK to query the most recent photos, EXIF data, and add/remove tags</li>\n<li>I use Nuxt to query the API and display the images on my Netlify-hosted website</li>\n</ol>\n<h2 id=\"automator-actions\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#automator-actions\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Automator Actions</h2>\n<h3 id=\"automatically-uploading-screenshots\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#automatically-uploading-screenshots\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Automatically uploading screenshots</h3>\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1715186716/Screenshot_2024-05-08_at_12.45.05_PM.png\" alt=\"The automator configuration that sits outside the following bash scripts: the first is a folder action that passes all green-tagged files/folders, and the other is a folder action that watches the screenshot folder for changes and runs the bash script when a new file is added\">\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#!/bin/bash</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># API keys for Cloudinary</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">export</span><span style=\"color:#CCCAC2\"> CLOUDINARY_URL</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">cloudinary://THIS_IS_SECRET@NAME</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># Iterate over each passed argument</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">for</span><span style=\"color:#CCCAC2\"> file </span><span style=\"color:#FFAD66\">in</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#DFBFFF\">$@</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">do</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # Check if the file exists</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  if</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#F29E74\">-f</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\"> ]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">    # Upload to Cloudinary and capture output</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    upload_output</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#73D0FF\">/opt/homebrew/bin/cld</span><span style=\"color:#D5FF80\"> uploader</span><span style=\"color:#D5FF80\"> upload</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#D5FF80\"> use_filename=</span><span style=\"color:#DFBFFF\">true</span><span style=\"color:#D5FF80\"> unique_filename=</span><span style=\"color:#DFBFFF\">false</span><span style=\"color:#F29E74\"> 2>&#x26;1</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    upload_exit_status</span><span style=\"color:#F29E74\">=</span><span style=\"color:#5CCFE6;font-style:italic\">$?</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">    # Check if the upload was successful</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    if</span><span style=\"color:#CCCAC2\"> [ $upload_exit_status </span><span style=\"color:#F29E74\">-eq</span><span style=\"color:#DFBFFF\"> 0</span><span style=\"color:#CCCAC2\"> ]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">      # Attempt to extract the URL using the absolute path for jq</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">      url</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#F28779\">echo</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$upload_output</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> /opt/homebrew/bin/jq</span><span style=\"color:#95E6CB\"> -r</span><span style=\"color:#D5FF80\"> '.url'</span><span style=\"color:#F29E74\"> 2></span><span style=\"color:#D5FF80\">/dev/null</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">      # Check if the URL is non-empty</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      if</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#F29E74\">-n</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$url</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\"> ]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"><span style=\"color:#F28779\">        echo</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$url</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> pbcopy</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        # Display success notification with the URL</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">        osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Uploaded </span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\"> to Cloudinary and URL copied to clipboard: </span><span style=\"color:#CCCAC2\">$url</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Screenshot Upload</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      else</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        # Display notification for empty URL</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">        osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Failed to extract URL from output</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Debug</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    else</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">      # Display notification for upload failure</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">      osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Failed to upload </span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\"> to Cloudinary. Error: </span><span style=\"color:#CCCAC2\">$upload_output</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Screenshot Upload</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  else</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">    # Display notification for file not found</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">    osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">File does not exist: </span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Debug</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">done</span></span>\n<span data-line=\"\"> </span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"#!/bin/bash\n\n# API keys for Cloudinary\nexport CLOUDINARY_URL=cloudinary://THIS_IS_SECRET@NAME\n\n# Iterate over each passed argument\nfor file in &#x22;$@&#x22;\ndo\n  # Check if the file exists\n  if [ -f &#x22;$file&#x22; ]; then\n    # Upload to Cloudinary and capture output\n    upload_output=$(/opt/homebrew/bin/cld uploader upload &#x22;$file&#x22; use_filename=true unique_filename=false 2>&#x26;1)\n    upload_exit_status=$?\n\n    # Check if the upload was successful\n    if [ $upload_exit_status -eq 0 ]; then\n      # Attempt to extract the URL using the absolute path for jq\n      url=$(echo &#x22;$upload_output&#x22; | /opt/homebrew/bin/jq -r &#x27;.url&#x27; 2>/dev/null)\n\n      # Check if the URL is non-empty\n      if [ -n &#x22;$url&#x22; ]; then\n        echo &#x22;$url&#x22; | pbcopy\n        # Display success notification with the URL\n        osascript -e &#x22;display notification \\&#x22;Uploaded $file to Cloudinary and URL copied to clipboard: $url\\&#x22; with title \\&#x22;Screenshot Upload\\&#x22;&#x22;\n      else\n        # Display notification for empty URL\n        osascript -e &#x22;display notification \\&#x22;Failed to extract URL from output\\&#x22; with title \\&#x22;Debug\\&#x22;&#x22;\n      fi\n    else\n      # Display notification for upload failure\n      osascript -e &#x22;display notification \\&#x22;Failed to upload $file to Cloudinary. Error: $upload_output\\&#x22; with title \\&#x22;Screenshot Upload\\&#x22;&#x22;\n    fi\n  else\n    # Display notification for file not found\n    osascript -e &#x22;display notification \\&#x22;File does not exist: $file\\&#x22; with title \\&#x22;Debug\\&#x22;&#x22;\n  fi\ndone\n\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h2 id=\"upload-all-green-tagged-files-to-cloudinary-through-folder-action\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#upload-all-green-tagged-files-to-cloudinary-through-folder-action\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Upload all green-tagged files to Cloudinary through Folder Action</h2>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#!/bin/bash</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># Ensure Cloudinary CLI is available</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">/opt/homebrew/bin/cld</span><span style=\"color:#F29E74\"> ></span><span style=\"color:#D5FF80\">/dev/null</span><span style=\"color:#F29E74\"> 2>&#x26;1</span><span style=\"color:#F29E74\"> ||</span><span style=\"color:#CCCAC2\"> { </span><span style=\"color:#F28779\">echo</span><span style=\"color:#F29E74\"> >&#x26;2</span><span style=\"color:#D5FF80\"> \"Cloudinary CLI required but not installed. Aborting.\"</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#F28779\"> exit</span><span style=\"color:#DFBFFF\"> 1</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#CCCAC2\"> }</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># API keys for cloudinary</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">export</span><span style=\"color:#CCCAC2\"> CLOUDINARY_URL</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">cloudinary://THIS_IS_SECRET@NAME</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># Iterate over all green tagged files </span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">for</span><span style=\"color:#CCCAC2\"> folder </span><span style=\"color:#FFAD66\">in</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#DFBFFF\">$@</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">do</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # Find all green tagged files</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  green_files</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#73D0FF\">mdfind</span><span style=\"color:#95E6CB\"> -onlyin</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$folder</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#D5FF80\"> 'kMDItemUserTags == Green'</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # Count the number of green tagged files</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  num_green_files</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#F28779\">echo</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$green_files</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> wc</span><span style=\"color:#95E6CB\"> -l</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">  osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#CCCAC2\">$num_green_files</span><span style=\"color:#D5FF80\"> green files found.</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Upload Green Media</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # Initialize counter for successful uploads</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  successful_uploads</span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\">0</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # Read each file</span></span>\n<span data-line=\"\"><span style=\"color:#F28779\">  echo</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$green_files</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#FFAD66\"> while</span><span style=\"color:#F28779\"> read</span><span style=\"color:#95E6CB\"> -r</span><span style=\"color:#D5FF80\"> file</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  do</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">    # Check if file is not an empty string</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    if</span><span style=\"color:#CCCAC2\"> [[ </span><span style=\"color:#F29E74\">-n</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\"> ]]</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    then</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">      # Use Cloudinary CLI to upload file</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">      upload_output</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#73D0FF\">/opt/homebrew/bin/cld</span><span style=\"color:#D5FF80\"> uploader</span><span style=\"color:#D5FF80\"> upload</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> 2>&#x26;1</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      if</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#5CCFE6;font-style:italic\">$?</span><span style=\"color:#F29E74\"> -eq</span><span style=\"color:#DFBFFF\"> 0</span><span style=\"color:#CCCAC2\"> ]</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      then</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        successful_uploads</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$((</span><span style=\"color:#73D0FF\">successful_uploads</span><span style=\"color:#D5FF80\"> +</span><span style=\"color:#DFBFFF\"> 1</span><span style=\"color:#CCCAC2\">))</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        # Notify every 25% for less than 10 files, otherwise only on errors</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        if</span><span style=\"color:#CCCAC2\"> [ $num_green_files </span><span style=\"color:#F29E74\">-le</span><span style=\"color:#DFBFFF\"> 10</span><span style=\"color:#CCCAC2\"> ] </span><span style=\"color:#F29E74\">||</span><span style=\"color:#CCCAC2\"> [ $((</span><span style=\"color:#73D0FF\">successful_uploads</span><span style=\"color:#D5FF80\"> %</span><span style=\"color:#CCCAC2\"> (num_green_files </span><span style=\"color:#D5FF80\">/</span><span style=\"color:#DFBFFF\"> 4</span><span style=\"color:#CCCAC2\">))) </span><span style=\"color:#F29E74\">-eq</span><span style=\"color:#DFBFFF\"> 0</span><span style=\"color:#CCCAC2\"> ]</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        then</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">          osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Uploaded </span><span style=\"color:#CCCAC2\">$successful_uploads</span><span style=\"color:#D5FF80\"> of </span><span style=\"color:#CCCAC2\">$num_green_files</span><span style=\"color:#D5FF80\"> files to Cloudinary.</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Upload Green Media</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      else</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        # Display the error message from Cloudinary in the notification</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">        osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Failed to upload </span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\"> to Cloudinary. Error: </span><span style=\"color:#CCCAC2\">$upload_output</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Upload Green Media</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">      fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    else</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">      osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Skipped an empty filename.</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Upload Green Media</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  done</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">done</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Done uploading files.</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Upload Green Media</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"#!/bin/bash\n\n# Ensure Cloudinary CLI is available\n/opt/homebrew/bin/cld >/dev/null 2>&#x26;1 || { echo >&#x26;2 &#x22;Cloudinary CLI required but not installed. Aborting.&#x22;; exit 1; }\n\n# API keys for cloudinary\nexport CLOUDINARY_URL=cloudinary://THIS_IS_SECRET@NAME\n\n# Iterate over all green tagged files \nfor folder in &#x22;$@&#x22;\ndo\n  # Find all green tagged files\n  green_files=$(mdfind -onlyin &#x22;$folder&#x22; &#x27;kMDItemUserTags == Green&#x27;)\n\n  # Count the number of green tagged files\n  num_green_files=$(echo &#x22;$green_files&#x22; | wc -l)\n  osascript -e &#x22;display notification \\&#x22;$num_green_files green files found.\\&#x22; with title \\&#x22;Upload Green Media\\&#x22;&#x22;\n\n  # Initialize counter for successful uploads\n  successful_uploads=0\n\n  # Read each file\n  echo &#x22;$green_files&#x22; | while read -r file\n  do\n    # Check if file is not an empty string\n    if [[ -n &#x22;$file&#x22; ]]\n    then\n      # Use Cloudinary CLI to upload file\n      upload_output=$(/opt/homebrew/bin/cld uploader upload &#x22;$file&#x22; 2>&#x26;1)\n\n      if [ $? -eq 0 ]\n      then\n        successful_uploads=$((successful_uploads + 1))\n        # Notify every 25% for less than 10 files, otherwise only on errors\n        if [ $num_green_files -le 10 ] || [ $((successful_uploads % (num_green_files / 4))) -eq 0 ]\n        then\n          osascript -e &#x22;display notification \\&#x22;Uploaded $successful_uploads of $num_green_files files to Cloudinary.\\&#x22; with title \\&#x22;Upload Green Media\\&#x22;&#x22;\n        fi\n      else\n        # Display the error message from Cloudinary in the notification\n        osascript -e &#x22;display notification \\&#x22;Failed to upload $file to Cloudinary. Error: $upload_output\\&#x22; with title \\&#x22;Upload Green Media\\&#x22;&#x22;\n      fi\n    else\n      osascript -e &#x22;display notification \\&#x22;Skipped an empty filename.\\&#x22; with title \\&#x22;Upload Green Media\\&#x22;&#x22;\n    fi\n  done\ndone\n\nosascript -e &#x22;display notification \\&#x22;Done uploading files.\\&#x22; with title \\&#x22;Upload Green Media\\&#x22;&#x22;\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h3 id=\"getting-exif-data-from-a-resource\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getting-exif-data-from-a-resource\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Getting EXIF data from a resource</h3>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Fetch the resource details with EXIF data</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> result </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">api</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">resource</span><span style=\"color:#CCCAC2\">(resourceId</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> { exif</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#DFBFFF\"> true</span><span style=\"color:#CCCAC2\"> })</span><span style=\"color:#CCCAC2B3\">;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"// Fetch the resource details with EXIF data\n\nconst result = await cloudinary.api.resource(resourceId, { exif: true });\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 id=\"getting-last-x-photos-uploaded\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#getting-last-x-photos-uploaded\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Getting last X photos uploaded</h4>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Fetch the last 100 images uploaded</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    const</span><span style=\"color:#CCCAC2\"> result </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">search</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">expression</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"resource_type:image\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">sort_by</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"uploaded_at\"</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#D5FF80\"> \"desc\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">with_field</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"tags\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">max_results</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">100</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">execute</span><span style=\"color:#CCCAC2\">()</span><span style=\"color:#CCCAC2B3\">;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"// Fetch the last 100 images uploaded\n    const result = await cloudinary.search\n      .expression(&#x22;resource_type:image&#x22;)\n      .sort_by(&#x22;uploaded_at&#x22;, &#x22;desc&#x22;)\n      .with_field(&#x22;tags&#x22;)\n      .max_results(100)\n      .execute();\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 id=\"nuxt-api-endpoint-serverapicloudinaryts\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#nuxt-api-endpoint-serverapicloudinaryts\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Nuxt API endpoint: <code>/server/api/cloudinary.ts</code></h4>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"ts\" data-theme=\"\"><code data-language=\"ts\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">import</span><span style=\"color:#CCCAC2\"> { defineEventHandler } </span><span style=\"color:#FFAD66\">from</span><span style=\"color:#D5FF80\"> \"h3\"</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">import</span><span style=\"color:#CCCAC2\"> { v2 </span><span style=\"color:#FFAD66\">as</span><span style=\"color:#CCCAC2\"> cloudinary } </span><span style=\"color:#FFAD66\">from</span><span style=\"color:#D5FF80\"> \"cloudinary\"</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">config</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  cloud_name</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> process</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">env</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">CLOUDINARY_CLOUD_NAME</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  api_key</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> process</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">env</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">CLOUDINARY_API_KEY</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  api_secret</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> process</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">env</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">CLOUDINARY_API_SECRET</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">\texport</span><span style=\"color:#FFAD66\"> default</span><span style=\"color:#FFD173\"> defineEventHandler</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#FFAD66\">async</span><span style=\"color:#CCCAC2\"> (</span><span style=\"color:#DFBFFF\">event</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">\t// readBody is auto-imported by Nuxt from h3</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">\tconst</span><span style=\"color:#CCCAC2\"> body </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#FFD173\"> readBody</span><span style=\"color:#CCCAC2\">(event)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">\tconst</span><span style=\"color:#CCCAC2\"> numPhotos </span><span style=\"color:#F29E74\">=</span><span style=\"color:#F29E74\"> +</span><span style=\"color:#CCCAC2\">body</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">numPhotos</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  try</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    const</span><span style=\"color:#CCCAC2\"> result </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">search</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">expression</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"resource_type:image\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">sort_by</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"uploaded_at\"</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#D5FF80\"> \"desc\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">max_results</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">100</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#B8CFE680;font-style:italic\">// or numPhotos</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">      .</span><span style=\"color:#FFD173\">execute</span><span style=\"color:#CCCAC2\">()</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    const</span><span style=\"color:#CCCAC2\"> photos </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> result</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">resources</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">map</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">resource</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> ({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">      href</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> resource</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">secure_url</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">      public_id</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> resource</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">public_id</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">      uploaded_at</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> resource</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">created_at</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    }))</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    return</span><span style=\"color:#CCCAC2\"> photos</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  } </span><span style=\"color:#FFAD66\">catch</span><span style=\"color:#CCCAC2\"> (err) {</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    console</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">error</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"Error fetching photos from Cloudinary: \"</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> err)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    return</span><span style=\"color:#CCCAC2\"> { error</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> \"An error occurred while fetching photos.\"</span><span style=\"color:#CCCAC2\"> }</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  }</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span><span style=\"color:#CCCAC2B3\">;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"import { defineEventHandler } from &#x22;h3&#x22;;\nimport { v2 as cloudinary } from &#x22;cloudinary&#x22;;\n\ncloudinary.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\n\texport default defineEventHandler(async (event) => {\n\t// readBody is auto-imported by Nuxt from h3\n\tconst body = await readBody(event);\n\tconst numPhotos = +body.numPhotos\n  try {\n    const result = await cloudinary.search\n      .expression(&#x22;resource_type:image&#x22;)\n      .sort_by(&#x22;uploaded_at&#x22;, &#x22;desc&#x22;)\n      .max_results(100) // or numPhotos\n      .execute();\n\n    const photos = result.resources.map((resource) => ({\n      href: resource.secure_url,\n      public_id: resource.public_id,\n      uploaded_at: resource.created_at,\n    }));\n\n    return photos;\n  } catch (err) {\n    console.error(&#x22;Error fetching photos from Cloudinary: &#x22;, err);\n    return { error: &#x22;An error occurred while fetching photos.&#x22; };\n  }\n});\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 id=\"fetching-photos-through-nuxt-api\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#fetching-photos-through-nuxt-api\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Fetching photos through Nuxt API</h4>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> { data: photos } </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#FFD173\"> useFetch</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'/api/cloudinary'</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  method</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'POST'</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  body</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> JSON</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">stringify</span><span style=\"color:#CCCAC2\">({ numPhotos</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> numPhotos</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value })</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"const { data: photos } = await useFetch(&#x27;/api/cloudinary&#x27;, {\n  method: &#x27;POST&#x27;,\n  body: JSON.stringify({ numPhotos: numPhotos.value })\n})\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 id=\"adding-photo-blog-tag\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#adding-photo-blog-tag\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Adding <code>photo-blog</code> tag</h4>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> result </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">uploader</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">add_tag</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'photo-blog'</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> [resourceId])</span><span style=\"color:#CCCAC2B3\">;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"const result = await cloudinary.uploader.add_tag(&#x27;photo-blog&#x27;, [resourceId]);\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h3 id=\"all-media-starts-in-dump\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#all-media-starts-in-dump\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>All media starts in <code>~/dump/</code></h3>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">I had a habit of creating new folders for a project, but then not really finishing that, and all of the media would grow cobwebs.</p>\n<h3 id=\"apple-shortcuts--automator\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#apple-shortcuts--automator\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Apple Shortcuts &#x26; Automator</h3>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">The first step is getting my files organized on my local computer. This process usually starts with plugging in an SD card from my fujifilm camera, helmet cam, or field audio recorder.</p>\n<h4 id=\"import-sd-card-to-dump\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#import-sd-card-to-dump\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Import SD card to <code>~/dump/</code></h4>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">First I use Applescript to show a dialog to ask myself whether to import or not.</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"applescript\" data-theme=\"\"><code data-language=\"applescript\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#F28779\">display dialog</span><span style=\"color:#D5FF80\"> \"New Volume connected- import to ~/dump?\"</span><span style=\"color:#CCCAC2\"> buttons {</span><span style=\"color:#D5FF80\">\"Yes\"</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#D5FF80\"> \"No\"</span><span style=\"color:#CCCAC2\">} default button </span><span style=\"color:#DFBFFF\">2</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">if</span><span style=\"color:#FFAD66\"> the</span><span style=\"color:#CCCAC2\"> button returned </span><span style=\"color:#FFAD66\">of</span><span style=\"color:#FFAD66\"> the</span><span style=\"color:#95E6CB\"> result</span><span style=\"color:#F29E74\"> is</span><span style=\"color:#D5FF80\"> \"No\"</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">error</span><span style=\"color:#FFAD66\"> number</span><span style=\"color:#DFBFFF\"> -128</span><span style=\"color:#B8CFE680;font-style:italic\"> (* user cancelled *)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">end if</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"display dialog &#x22;New Volume connected- import to ~/dump?&#x22; buttons {&#x22;Yes&#x22;, &#x22;No&#x22;} default button 2\n\nif the button returned of the result is &#x22;No&#x22; then\n\nerror number -128 (* user cancelled *)\n\nend if\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">If the user selects \"Yes\" we continue on to this shell script</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#!/bin/bash</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">totalFiles</span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\">0</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">totalSize</span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\">0</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFD173\">handle_folder</span><span style=\"color:#CCCAC2\">() {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    for</span><span style=\"color:#CCCAC2\"> aFile </span><span style=\"color:#FFAD66\">in</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#DFBFFF\">$1</span><span style=\"color:#D5FF80\">\"/*</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> do</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        if</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#F29E74\">-d</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$aFile</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\"> ]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">            handle_folder</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$aFile</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        elif</span><span style=\"color:#CCCAC2\"> [[ </span><span style=\"color:#D5FF80\">\"$(</span><span style=\"color:#F28779\">echo</span><span style=\"color:#CCCAC2\"> $aFile</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> tr</span><span style=\"color:#D5FF80\"> '[:upper:]' '[:lower:]')\"</span><span style=\"color:#F29E74\"> =~</span><span style=\"color:#95E6CB\"> \\.</span><span style=\"color:#CCCAC2\">(jpe</span><span style=\"color:#F29E74\">?</span><span style=\"color:#CCCAC2\">g</span><span style=\"color:#F29E74\">|</span><span style=\"color:#CCCAC2\">mp[</span><span style=\"color:#DFBFFF\">34</span><span style=\"color:#CCCAC2\">]</span><span style=\"color:#F29E74\">|</span><span style=\"color:#CCCAC2\">raf</span><span style=\"color:#F29E74\">|</span><span style=\"color:#CCCAC2\">wav)$ ]]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"><span style=\"color:#F28779\">            echo</span><span style=\"color:#D5FF80\"> \"Copying file </span><span style=\"color:#CCCAC2\">$aFile</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#B8CFE680;font-style:italic\">  # debugging line</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">            newFilePath</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$HOME</span><span style=\"color:#D5FF80\">/dump/</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#73D0FF\">basename</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$aFile</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">            cp</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$aFile</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$newFilePath</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">                </span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">            totalFiles</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$((</span><span style=\"color:#73D0FF\">totalFiles</span><span style=\"color:#D5FF80\"> +</span><span style=\"color:#DFBFFF\"> 1</span><span style=\"color:#CCCAC2\">))</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">            totalSize</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$((</span><span style=\"color:#73D0FF\">totalSize</span><span style=\"color:#D5FF80\"> +</span><span style=\"color:#CCCAC2\"> $(</span><span style=\"color:#73D0FF\">du</span><span style=\"color:#95E6CB\"> -k</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$aFile</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> cut</span><span style=\"color:#95E6CB\"> -f1</span><span style=\"color:#CCCAC2\">)))</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    done</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">mkdir</span><span style=\"color:#95E6CB\"> -p</span><span style=\"color:#CCCAC2\"> $HOME</span><span style=\"color:#D5FF80\">/dump</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># List all volumes and handle each</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">for</span><span style=\"color:#CCCAC2\"> sdcard </span><span style=\"color:#FFAD66\">in</span><span style=\"color:#D5FF80\"> /Volumes/*</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> do</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    if</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\">$sdcard</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> !=</span><span style=\"color:#D5FF80\"> \"/Volumes/Macintosh HD\"</span><span style=\"color:#CCCAC2\"> ] </span><span style=\"color:#CCCAC2B3\">&#x26;&#x26;</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#F29E74\">-d</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$sdcard</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\"> ]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span><span style=\"color:#B8CFE680;font-style:italic\">  # Exclude Macintosh HD, the main disk of macOS</span></span>\n<span data-line=\"\"><span style=\"color:#F28779\">        echo</span><span style=\"color:#D5FF80\"> \"Handling SD Card: </span><span style=\"color:#CCCAC2\">$sdcard</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#B8CFE680;font-style:italic\">  # debugging line</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">        handle_folder</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$sdcard</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">done</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># Convert size to GB</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">totalSizeGB</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#F28779\">echo</span><span style=\"color:#D5FF80\"> \"scale=2; </span><span style=\"color:#CCCAC2\">$totalSize</span><span style=\"color:#D5FF80\">/1024/1024\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> bc</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">osascript</span><span style=\"color:#95E6CB\"> -e</span><span style=\"color:#D5FF80\"> \"display notification </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">Successfully copied </span><span style=\"color:#CCCAC2\">$totalFiles</span><span style=\"color:#D5FF80\"> files totaling </span><span style=\"color:#CCCAC2\">$totalSizeGB</span><span style=\"color:#D5FF80\"> GB to the dump folder</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\"> with title </span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">File Operation Summary</span><span style=\"color:#95E6CB\">\\\"</span><span style=\"color:#D5FF80\">\"</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"#!/bin/bash\n\ntotalFiles=0\ntotalSize=0\n\nhandle_folder() {\n    for aFile in &#x22;$1&#x22;/*; do\n        if [ -d &#x22;$aFile&#x22; ]; then\n            handle_folder &#x22;$aFile&#x22;\n        elif [[ &#x22;$(echo $aFile | tr &#x27;[:upper:]&#x27; &#x27;[:lower:]&#x27;)&#x22; =~ \\.(jpe?g|mp[34]|raf|wav)$ ]]; then\n            echo &#x22;Copying file $aFile&#x22;  # debugging line\n            newFilePath=$HOME/dump/$(basename &#x22;$aFile&#x22;)\n            cp &#x22;$aFile&#x22; &#x22;$newFilePath&#x22;\n                \n            totalFiles=$((totalFiles + 1))\n            totalSize=$((totalSize + $(du -k &#x22;$aFile&#x22; | cut -f1)))\n        fi\n    done\n}\n\nmkdir -p $HOME/dump\n\n# List all volumes and handle each\nfor sdcard in /Volumes/*; do\n    if [ &#x22;$sdcard&#x22; != &#x22;/Volumes/Macintosh HD&#x22; ] &#x26;&#x26; [ -d &#x22;$sdcard&#x22; ]; then  # Exclude Macintosh HD, the main disk of macOS\n        echo &#x22;Handling SD Card: $sdcard&#x22;  # debugging line\n        handle_folder &#x22;$sdcard&#x22;\n    fi\ndone\n\n# Convert size to GB\ntotalSizeGB=$(echo &#x22;scale=2; $totalSize/1024/1024&#x22; | bc)\n\nosascript -e &#x22;display notification \\&#x22;Successfully copied $totalFiles files totaling $totalSizeGB GB to the dump folder\\&#x22; with title \\&#x22;File Operation Summary\\&#x22;&#x22;\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 id=\"organize-dump-into-media\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#organize-dump-into-media\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Organize <code>~/dump/</code> into <code>~/media/</code></h4>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">Every once in a while, when the folder grows a little too big and unwieldy, I have a shell script as part of a shortcut (which means I can run it from an icon in my dock) that takes everything in <code>~/dump/</code> and organizes it into a folder structure by month, day, and media type.</p>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">Draft script to move from ~/dump/ into organized folders in ~/media/</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#!/bin/bash</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">shopt</span><span style=\"color:#95E6CB\"> -s</span><span style=\"color:#D5FF80\"> globstar</span><span style=\"color:#D5FF80\"> nullglob</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># get creation date and format it to YYYY-MM-DD</span></span>\n<span data-line=\"\"><span style=\"color:#FFD173\">getDate</span><span style=\"color:#CCCAC2\">() {</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">    date</span><span style=\"color:#95E6CB\"> -r</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#DFBFFF\">$1</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#D5FF80\"> +'%Y-%m-%d'</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#iterate recursively over all files in the target directory.</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">for</span><span style=\"color:#CCCAC2\"> file </span><span style=\"color:#FFAD66\">in</span><span style=\"color:#D5FF80\"> ~/dump/**/*.*</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> do</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">    # Ensure path is a file</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    if</span><span style=\"color:#CCCAC2\"> [ </span><span style=\"color:#F29E74\">-f</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\"> ]</span><span style=\"color:#CCCAC2B3\">;</span><span style=\"color:#FFAD66\"> then</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        #get creation date of file</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        file_date</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#73D0FF\">getDate</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        #get mime-type of file</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        mime_type</span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\">$(</span><span style=\"color:#73D0FF\">file</span><span style=\"color:#95E6CB\"> --mime-type</span><span style=\"color:#95E6CB\"> -b</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> awk</span><span style=\"color:#95E6CB\"> -F</span><span style=\"color:#D5FF80\">'/'</span><span style=\"color:#D5FF80\"> '{print $1}'</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        </span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        #needs write permissions on /media/</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        dir_name</span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\">~/media/\"</span><span style=\"color:#CCCAC2\">$file_date</span><span style=\"color:#D5FF80\">\"/\"</span><span style=\"color:#CCCAC2\">$mime_type</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        #creating Target Directory</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">        mkdir</span><span style=\"color:#95E6CB\"> -p</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$dir_name</span><span style=\"color:#D5FF80\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        </span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">        #move files</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">        mv</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$dir_name</span><span style=\"color:#D5FF80\">\"/</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#F28779\">        echo</span><span style=\"color:#D5FF80\"> \"</span><span style=\"color:#CCCAC2\">$file</span><span style=\"color:#D5FF80\"> : moved to </span><span style=\"color:#CCCAC2\">$dir_name</span><span style=\"color:#D5FF80\">\"</span><span style=\"color:#F29E74\"> >></span><span style=\"color:#D5FF80\"> ~/dump/_logs.txt</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    fi</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">done</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#Emptying</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">rm</span><span style=\"color:#95E6CB\"> -r</span><span style=\"color:#D5FF80\"> ~/dump/</span><span style=\"color:#5CCFE6;font-style:italic\">*</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">#Logs</span></span>\n<span data-line=\"\"><span style=\"color:#F28779\">echo</span><span style=\"color:#D5FF80\"> \"Organizing Completed $(</span><span style=\"color:#73D0FF\">date</span><span style=\"color:#D5FF80\"> +\"%T\")\"</span><span style=\"color:#F29E74\"> >></span><span style=\"color:#D5FF80\"> ~/dump/_logs.txt</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">cat</span><span style=\"color:#D5FF80\"> ~/dump/_logs.txt</span><span style=\"color:#F29E74\"> ></span><span style=\"color:#D5FF80\"> ~/logs.txt</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"#!/bin/bash\n\nshopt -s globstar nullglob\n\n# get creation date and format it to YYYY-MM-DD\ngetDate() {\n    date -r &#x22;$1&#x22; +&#x27;%Y-%m-%d&#x27;\n}\n\n#iterate recursively over all files in the target directory.\nfor file in ~/dump/**/*.*; do\n    # Ensure path is a file\n    if [ -f &#x22;$file&#x22; ]; then\n        #get creation date of file\n        file_date=$(getDate &#x22;$file&#x22;)\n\n        #get mime-type of file\n        mime_type=$(file --mime-type -b &#x22;$file&#x22; | awk -F&#x27;/&#x27; &#x27;{print $1}&#x27;)\n        \n        #needs write permissions on /media/\n        dir_name=~/media/&#x22;$file_date&#x22;/&#x22;$mime_type&#x22;\n\n        #creating Target Directory\n        mkdir -p &#x22;$dir_name&#x22;\n        \n        #move files\n        mv &#x22;$file&#x22; &#x22;$dir_name&#x22;/\n\n        echo &#x22;$file : moved to $dir_name&#x22; >> ~/dump/_logs.txt\n    fi\ndone\n\n#Emptying\nrm -r ~/dump/*\n\n#Logs\necho &#x22;Organizing Completed $(date +&#x22;%T&#x22;)&#x22; >> ~/dump/_logs.txt\ncat ~/dump/_logs.txt > ~/logs.txt\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 id=\"upload-to-the-web\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#upload-to-the-web\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Upload to the web</h4>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">The finder is an extremely powerful way to look at, organize, and tag files. Instead of recreating these things haphazardly in my own media library, I'd rather use one of the best ones in existence and augment it a bit to do my bidding.</p>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">I naturally found myself using a system of tagging photos with yellow for \"maybe\" and green for \"publish\". I'd import an SD card for a folder, scroll through it in finder, and slowly gather my picks. Then I'd select all the green files and drag them to another folder, or upload and publish them somewhere. I figured it would be best to try and automate what I was already doing.</p>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">So I created a very basic shortcut that uploads yellow/green files in the current directory to Cloudinary. This also allows you to right-click on a folder and upload all the green-tagged media to Cloudinary.</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># Navigate to your media directory</span></span>\n<span data-line=\"\"><span style=\"color:#F28779\">cd</span><span style=\"color:#D5FF80\"> ~/media/</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># Find all yellow/green tagged files</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">for</span><span style=\"color:#CCCAC2\"> file </span><span style=\"color:#FFAD66\">in</span><span style=\"color:#CCCAC2\"> $(</span><span style=\"color:#73D0FF\">mdfind</span><span style=\"color:#95E6CB\"> -onlyin</span><span style=\"color:#D5FF80\"> .</span><span style=\"color:#D5FF80\"> \"kMDItemFSLabel == 2 || kMDItemFSLabel == 6\"</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">do</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # Upload file to Cloudinary</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">  cloudinary</span><span style=\"color:#D5FF80\"> upload</span><span style=\"color:#CCCAC2\"> $file </span><span style=\"color:#95E6CB\">--use_filename</span><span style=\"color:#95E6CB\"> --unique_filename</span><span style=\"color:#DFBFFF\"> false</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  </span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  # (Optional) To save the Cloudinary URL in the EXIF data, you would need an additional tool such as ExifTool.</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">done</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"# Navigate to your media directory\ncd ~/media/\n\n# Find all yellow/green tagged files\nfor file in $(mdfind -onlyin . &#x22;kMDItemFSLabel == 2 || kMDItemFSLabel == 6&#x22;)\ndo\n  # Upload file to Cloudinary\n  cloudinary upload $file --use_filename --unique_filename false\n  \n  # (Optional) To save the Cloudinary URL in the EXIF data, you would need an additional tool such as ExifTool.\ndone\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h3 id=\"get-all-cloudinary-photos-for-a-week\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#get-all-cloudinary-photos-for-a-week\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14.81 17.81\" class=\"header-star inline-block mr-2\" width=\"14\" height=\"17\" opacity=\"0.2\">\n  <path d=\"M10.01,5.75c1.18-.82,2.19-1.55,3.22-2.24.48-.32,1.05-.52,1.45.07.39.58-.22.78-.54,1.07-1.15,1.05-2.29,2.12-3.46,3.14-1.61,1.41-1.68,2.82-.12,4.35.44.43.97.78,1.48,1.15.42.3.69.68.51,1.19-.2.58-.69.76-1.28.85-.87.14-1.6-1.14-2.32-.42-.47.48-.41,1.47-.65,2.2-.13.39-.52.6-.91.67-.54.1-.89-.26-1.1-.68-.37-.72-.37-1.45-.11-2.26.29-.91.9-2.19,0-2.72-.56-.33-1.53.82-2.14,1.53-.76.88-1.8,1.51-2.32,2.62-.23.48-.75.58-1.22.35-.67-.31-.56-.89-.31-1.4.71-1.44,1.94-2.43,3.1-3.46,2.66-2.37,2.68-2.36.36-5.11-.5-.6-1.05-1.16-1.57-1.74-.22-.25-.34-.56-.13-.84.2-.27.56-.24.87-.19,1.09.18,1.71,1.01,2.43,1.72.54.54,1.03,1.57,1.74,1.37.82-.24.4-1.36.48-2.08.18-1.48.32-2.95.89-4.33C8.48.27,8.7.01,9.04,0c.48-.01.69.37.72.75.07.93.1,1.87.07,2.81-.02.68-.26,1.36.17,2.19Z\"></path>\n</svg></a>Get all Cloudinary photos for a week</h3>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">Now that all of this content has been stored on Cloudinary, we want a way to get it back out. We are going to need to access the Cloudinary admin, and use our secret, so this has to be done on the server side instead of the client side.</p>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">Here's a rough mockup of what we are going to want to do:</p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> cloudinary </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFD173\"> require</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'cloudinary'</span><span style=\"color:#CCCAC2\">)</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">v2</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">config</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">   cloud_name</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'your_cloud_name'</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">   api_key</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'your_api_key'</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">   api_secret</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'your_api_secret'</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">async</span><span style=\"color:#FFAD66\"> function</span><span style=\"color:#FFD173\"> getImagesByWeek</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">year</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> week</span><span style=\"color:#CCCAC2\">) {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">   // Use a library like date-fns to determine the start and end dates of the week</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">   const</span><span style=\"color:#CCCAC2\"> startDate </span><span style=\"color:#F29E74\">=</span><span style=\"color:#F29E74\"> new</span><span style=\"color:#FFD173\"> Date</span><span style=\"color:#CCCAC2\">(dateFns</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">startOfWeek</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#F29E74\">new</span><span style=\"color:#FFD173\"> Date</span><span style=\"color:#CCCAC2\">(year</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> 0</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> 2</span><span style=\"color:#F29E74\"> +</span><span style=\"color:#CCCAC2\"> (week </span><span style=\"color:#F29E74\">-</span><span style=\"color:#DFBFFF\"> 1</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#F29E74\">*</span><span style=\"color:#DFBFFF\"> 7</span><span style=\"color:#CCCAC2\">)))</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">   const</span><span style=\"color:#CCCAC2\"> endDate </span><span style=\"color:#F29E74\">=</span><span style=\"color:#F29E74\"> new</span><span style=\"color:#FFD173\"> Date</span><span style=\"color:#CCCAC2\">(dateFns</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">endOfWeek</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#F29E74\">new</span><span style=\"color:#FFD173\"> Date</span><span style=\"color:#CCCAC2\">(year</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> 0</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> 2</span><span style=\"color:#F29E74\"> +</span><span style=\"color:#CCCAC2\"> (week </span><span style=\"color:#F29E74\">-</span><span style=\"color:#DFBFFF\"> 1</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#F29E74\">*</span><span style=\"color:#DFBFFF\"> 7</span><span style=\"color:#CCCAC2\">)))</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">   let</span><span style=\"color:#CCCAC2\"> expression </span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\"> `resource_type:image AND creation_date>=</span><span style=\"color:#FFAD66\">${</span><span style=\"color:#CCCAC2\">startDate</span><span style=\"color:#FFAD66\">}</span><span style=\"color:#D5FF80\"> AND creation_date&#x3C;=</span><span style=\"color:#FFAD66\">${</span><span style=\"color:#CCCAC2\">endDate</span><span style=\"color:#FFAD66\">}</span><span style=\"color:#D5FF80\">`</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">   try</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">       let</span><span style=\"color:#CCCAC2\"> result </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> cloudinary</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">search</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">           .</span><span style=\"color:#FFD173\">expression</span><span style=\"color:#CCCAC2\">(expression)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">           .</span><span style=\"color:#FFD173\">sort_by</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'upload_date'</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#D5FF80\"> 'desc'</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">           .</span><span style=\"color:#FFD173\">execute</span><span style=\"color:#CCCAC2\">()</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">       return</span><span style=\"color:#CCCAC2\"> result</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">resources</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">   } </span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">   catch</span><span style=\"color:#CCCAC2\"> (err) {</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">        console</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">error</span><span style=\"color:#CCCAC2\">(err)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">        return</span><span style=\"color:#CCCAC2\"> []</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">   }</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"const cloudinary = require(&#x27;cloudinary&#x27;).v2;\n\ncloudinary.config({\n   cloud_name: &#x27;your_cloud_name&#x27;,\n   api_key: &#x27;your_api_key&#x27;,\n   api_secret: &#x27;your_api_secret&#x27;\n});\n\nasync function getImagesByWeek(year, week) {\n   // Use a library like date-fns to determine the start and end dates of the week\n   const startDate = new Date(dateFns.startOfWeek(new Date(year, 0, 2 + (week - 1) * 7)));\n   const endDate = new Date(dateFns.endOfWeek(new Date(year, 0, 2 + (week - 1) * 7)));\n\n   let expression = &#x60;resource_type:image AND creation_date>=${startDate} AND creation_date<=${endDate}&#x60;;\n\n   try {\n       let result = await cloudinary.search\n           .expression(expression)\n           .sort_by(&#x27;upload_date&#x27;, &#x27;desc&#x27;)\n           .execute();\n\n       return result.resources;\n   } \n   catch (err) {\n        console.error(err);\n        return [];\n   }\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">I am creating my gallery as a [Nuxt app] (<a href=\"https://github.com/ejfox/nuxt-template-2023\">https://github.com/ejfox/nuxt-template-2023<svg style=\"display: inline-block; vertical-align: middle; width: 0.7em; height: 0.7em; margin-left: 0.2rem; margin-right: 0.2rem; margin-top: -0.2em; opacity: 0.8;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 .297c-6.63 0-12 5.373-12 12c0 5.303 3.438 9.8 8.205 11.385c.6.113.82-.258.82-.577c0-.285-.01-1.04-.015-2.04c-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729c1.205.084 1.838 1.236 1.838 1.236c1.07 1.835 2.809 1.305 3.495.998c.108-.776.417-1.305.76-1.605c-2.665-.3-5.466-1.332-5.466-5.93c0-1.31.465-2.38 1.235-3.22c-.135-.303-.54-1.523.105-3.176c0 0 1.005-.322 3.3 1.23c.96-.267 1.98-.399 3-.405c1.02.006 2.04.138 3 .405c2.28-1.552 3.285-1.23 3.285-1.23c.645 1.653.24 2.873.12 3.176c.765.84 1.23 1.91 1.23 3.22c0 4.61-2.805 5.625-5.475 5.92c.42.36.81 1.096.81 2.22c0 1.606-.015 2.896-.015 3.286c0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg></a>) so I think the best way to fetch my new photos is to create them as a <a href=\"https://nuxt.com/docs/guide/directory-structure/server\">Nuxt Server API</a> so that when I go to <code>myapp/api/latest-photos</code> this script will run, fetch the latest photos, add them to the DB if necessary, and return the list so it can be displayed.</p>"
}