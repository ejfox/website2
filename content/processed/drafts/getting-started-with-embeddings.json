{
  "slug": "drafts/getting-started-with-embeddings",
  "dek": "In which we put words into space and then explore the constellations they create",
  "inprogress": true,
  "date": "2023-07-16T20:34:14.000Z",
  "modified": "2024-09-20T04:24:52.000Z",
  "tags": [
    "art",
    "machinelearning",
    "database",
    "javascript",
    "coding",
    "data",
    "visualization",
    "programming"
  ],
  "hidden": true,
  "draft": true,
  "robotsMeta": "noindex, nofollow",
  "title": "Getting started with embeddings in JS",
  "toc": [
    {
      "text": "Getting started with embeddings in JS",
      "slug": "getting-started-with-embeddings-in-js",
      "level": "h2",
      "children": []
    }
  ],
  "wordCount": 264,
  "readingTime": 2,
  "imageCount": 0,
  "linkCount": 5,
  "content": "<p class=\"max-w-prose\" style=\"max-width: 50ch;\"><a href=\"https://supabase.com/docs/guides/database/extensions/pgvector\">pgvector: Embeddings and vector similarity</a></p>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\"><a href=\"https://supabase.com/blog/openai-embeddings-postgres-vector\">Storing OpenAI embeddings in Postgres with pgvector</a></p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">async</span><span style=\"color:#FFAD66\"> function</span><span style=\"color:#FFD173\"> memoryToEmbedding</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">memory</span><span style=\"color:#CCCAC2\">) {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  const</span><span style=\"color:#CCCAC2\"> embedding </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> openai</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">createEmbedding</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    model</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'text-embedding-ada-002'</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    input</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> memory</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  })</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  return</span><span style=\"color:#CCCAC2\"> embedding</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"async function memoryToEmbedding(memory) {\n  const embedding = openai.createEmbedding({\n    model: &#x27;text-embedding-ada-002&#x27;,\n    input: memory,\n  });\n  return embedding;\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> title </span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\"> 'First post!'</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> body </span><span style=\"color:#F29E74\">=</span><span style=\"color:#D5FF80\"> 'Hello world!'</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Generate a vector using OpenAI</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> embeddingResponse </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> openai</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">createEmbedding</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  model</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'text-embedding-ada-002'</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  input</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> body</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> [{ embedding }] </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> embeddingResponse</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">data</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">data</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Store the vector in Postgres</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> { data</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> error } </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> supabase</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">from</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'posts'</span><span style=\"color:#CCCAC2\">)</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">insert</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  title</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  body</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  embedding</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"const title = &#x27;First post!&#x27;\nconst body = &#x27;Hello world!&#x27;\n\n// Generate a vector using OpenAI\nconst embeddingResponse = await openai.createEmbedding({\n  model: &#x27;text-embedding-ada-002&#x27;,\n  input: body,\n})\n\nconst [{ embedding }] = embeddingResponse.data.data\n\n// Store the vector in Postgres\nconst { data, error } = await supabase.from(&#x27;posts&#x27;).insert({\n  title,\n  body,\n  embedding,\n})\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\">Need to create <code>match_documents</code> function: <a href=\"https://supabase.com/docs/guides/database/functions\">Database Functions | Supabase Docs</a></p>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\"><a href=\"https://supabase.com/blog/openai-embeddings-postgres-vector\">Storing OpenAI embeddings in Postgres with pgvector</a></p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"sql\" data-theme=\"\"><code data-language=\"sql\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">create or replace</span><span style=\"color:#FFAD66\"> function</span><span style=\"color:#FFD173\"> match_documents</span><span style=\"color:#CCCAC2\"> (</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  query_embedding vector(</span><span style=\"color:#DFBFFF\">1536</span><span style=\"color:#CCCAC2\">),</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  match_threshold </span><span style=\"color:#FFAD66\">float</span><span style=\"color:#CCCAC2\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  match_count </span><span style=\"color:#FFAD66\">int</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">returns</span><span style=\"color:#FFAD66\"> table</span><span style=\"color:#CCCAC2\"> (</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  id </span><span style=\"color:#FFAD66\">bigint</span><span style=\"color:#CCCAC2\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  content </span><span style=\"color:#FFAD66\">text</span><span style=\"color:#CCCAC2\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  similarity </span><span style=\"color:#FFAD66\">float</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">language</span><span style=\"color:#FFAD66\"> sql</span><span style=\"color:#CCCAC2\"> stable</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">as</span><span style=\"color:#CCCAC2\"> $$</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  select</span></span>\n<span data-line=\"\"><span style=\"color:#95E6CB\">    documents</span><span style=\"color:#CCCAC2\">.</span><span style=\"color:#95E6CB\">id</span><span style=\"color:#CCCAC2\">,</span></span>\n<span data-line=\"\"><span style=\"color:#95E6CB\">    documents</span><span style=\"color:#CCCAC2\">.</span><span style=\"color:#95E6CB\">content</span><span style=\"color:#CCCAC2\">,</span></span>\n<span data-line=\"\"><span style=\"color:#DFBFFF\">    1</span><span style=\"color:#F29E74\"> -</span><span style=\"color:#CCCAC2\"> (</span><span style=\"color:#95E6CB\">documents</span><span style=\"color:#CCCAC2\">.</span><span style=\"color:#95E6CB\">embedding</span><span style=\"color:#F29E74\"> &#x3C;=></span><span style=\"color:#CCCAC2\"> query_embedding) </span><span style=\"color:#FFAD66\">as</span><span style=\"color:#CCCAC2\"> similarity</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  from</span><span style=\"color:#CCCAC2\"> documents</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  where</span><span style=\"color:#DFBFFF\"> 1</span><span style=\"color:#F29E74\"> -</span><span style=\"color:#CCCAC2\"> (</span><span style=\"color:#95E6CB\">documents</span><span style=\"color:#CCCAC2\">.</span><span style=\"color:#95E6CB\">embedding</span><span style=\"color:#F29E74\"> &#x3C;=></span><span style=\"color:#CCCAC2\"> query_embedding) </span><span style=\"color:#F29E74\">></span><span style=\"color:#CCCAC2\"> match_threshold</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  order by</span><span style=\"color:#CCCAC2\"> similarity </span><span style=\"color:#FFAD66\">desc</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  limit</span><span style=\"color:#CCCAC2\"> match_count;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">$$;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"create or replace function match_documents (\n  query_embedding vector(1536),\n  match_threshold float,\n  match_count int\n)\nreturns table (\n  id bigint,\n  content text,\n  similarity float\n)\nlanguage sql stable\nas $$\n  select\n    documents.id,\n    documents.content,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where 1 - (documents.embedding <=> query_embedding) > match_threshold\n  order by similarity desc\n  limit match_count;\n$$;\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<blockquote>\n<p class=\"max-w-prose max-w-prose\" style=\"max-width: 50ch;\">pgvector introduces 3 new operators that can be used to calculate similarity:\n- <code>&#x3C;-></code> Euclidean distance\n- <code>&#x3C;#></code> Negative inner product\n- <code>&#x3C;=></code> Cosine distance</p>\n</blockquote>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">async</span><span style=\"color:#FFAD66\"> function</span><span style=\"color:#FFD173\"> getRelevantMemories</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">queryString</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> limit</span><span style=\"color:#F29E74\"> =</span><span style=\"color:#DFBFFF\"> 5</span><span style=\"color:#CCCAC2\">) {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  // turn the queryString into an embedding</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  const</span><span style=\"color:#CCCAC2\"> embeddingResponse </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> openai</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">createEmbedding</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    model</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> 'text-embedding-ada-002'</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    input</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> queryString</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">toString</span><span style=\"color:#CCCAC2\">()</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  })</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  const</span><span style=\"color:#CCCAC2\"> [{ embedding }] </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> embeddingResponse</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">data</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">data</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">  // query the database for the most relevant memories</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  const</span><span style=\"color:#CCCAC2\"> { data</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> error } </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFAD66\"> await</span><span style=\"color:#CCCAC2\"> supabase</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">rpc</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'match_documents'</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> { </span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    query_embedding</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> embedding</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    match_threshold</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#DFBFFF\"> 0.78</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    match_count</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> limit</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  })</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  if</span><span style=\"color:#CCCAC2\"> (error) {</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">    console</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">error</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">\"Error fetching relevant user memory:\"</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#CCCAC2\"> error)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">    return</span><span style=\"color:#DFBFFF\"> null</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  }</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">  return</span><span style=\"color:#CCCAC2\"> data</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"async function getRelevantMemories(queryString, limit = 5) {\n  // turn the queryString into an embedding\n  const embeddingResponse = await openai.createEmbedding({\n    model: &#x27;text-embedding-ada-002&#x27;,\n    input: queryString.toString(),\n  })\n\n  const [{ embedding }] = embeddingResponse.data.data\n\n  // query the database for the most relevant memories\n  const { data, error } = await supabase.rpc(&#x27;match_documents&#x27;, { \n    query_embedding: embedding,\n    match_threshold: 0.78,\n    match_count: limit\n  });\n\n  if (error) {\n    console.error(&#x22;Error fetching relevant user memory:&#x22;, error);\n    return null;\n  }\n\n  return data\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"max-w-prose\" style=\"max-width: 50ch;\"><a href=\"https://github.com/ejfox/coachartie_discord\">GitHub - ejfox/coachartie_discord<svg style=\"display: inline-block; vertical-align: middle; width: 0.7em; height: 0.7em; margin-left: 0.2rem; margin-right: 0.2rem; margin-top: -0.2em; opacity: 0.8;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 .297c-6.63 0-12 5.373-12 12c0 5.303 3.438 9.8 8.205 11.385c.6.113.82-.258.82-.577c0-.285-.01-1.04-.015-2.04c-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729c1.205.084 1.838 1.236 1.838 1.236c1.07 1.835 2.809 1.305 3.495.998c.108-.776.417-1.305.76-1.605c-2.665-.3-5.466-1.332-5.466-5.93c0-1.31.465-2.38 1.235-3.22c-.135-.303-.54-1.523.105-3.176c0 0 1.005-.322 3.3 1.23c.96-.267 1.98-.399 3-.405c1.02.006 2.04.138 3 .405c2.28-1.552 3.285-1.23 3.285-1.23c.645 1.653.24 2.873.12 3.176c.765.84 1.23 1.91 1.23 3.22c0 4.61-2.805 5.625-5.475 5.92c.42.36.81 1.096.81 2.22c0 1.606-.015 2.896-.015 3.286c0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/></svg></a></p>"
}