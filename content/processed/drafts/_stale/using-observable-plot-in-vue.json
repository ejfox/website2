{
  "content": "<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">#dataviz #howto</p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"https://observablehq.com/@observablehq/plot\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Observable Plot</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 20q-1.597 0-2.77-.696a4.7 4.7 0 0 1-1.794-1.89a10 10 0 0 1-.916-2.53A13.6 13.6 0 0 1 6.23 12q0-1.149.152-2.2q.15-1.049.556-2.132A6.8 6.8 0 0 1 7.98 5.79a4.7 4.7 0 0 1 1.668-1.293Q10.681 4 12 4q1.597 0 2.77.696a4.7 4.7 0 0 1 1.794 1.89q.627 1.193.916 2.53T17.77 12q0 1.149-.152 2.2a9.8 9.8 0 0 1-.567 2.132a7.2 7.2 0 0 1-1.042 1.878q-.627.796-1.657 1.293q-1.031.498-2.352.497m2.037-5.882c.551-.554.858-1.32.848-2.118q0-1.236-.827-2.118Q13.23 9 12 9t-2.058.882A3 3 0 0 0 9.115 12q0 1.236.827 2.118Q10.77 15 12 15t2.037-.882M12 24c6.372 0 11.538-5.373 11.538-12S18.372 0 12 0S.462 5.373.462 12S5.628 24 12 24\" class=\"\"></path></svg> is an awesome tool for quickly sketching and exploring data. It is wonderful when paired with Vue, which can handle user interactions, routing, and state management that can be a bridge between a <a href=\"2022-prototyping-toolkit-%7Cprototyp\" class=\"prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">2022-prototyping-toolkit |prototyp</a>e]] and a functional tool.</p>\n<blockquote class=\"prose-blockquote prose-sm max-w-prose pl-4 border-l-4 border-zinc-300 dark:border-zinc-700 italic my-4 text-zinc-700 dark:text-zinc-300 animate-on-scroll slide-from-left\">\n<p class=\"prose-p prose-sm max-w-prose mb-4 text-zinc-600 dark:text-zinc-400 prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"https://github.com/observablehq/plot\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Observable Plot</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 .297c-6.63 0-12 5.373-12 12c0 5.303 3.438 9.8 8.205 11.385c.6.113.82-.258.82-.577c0-.285-.01-1.04-.015-2.04c-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729c1.205.084 1.838 1.236 1.838 1.236c1.07 1.835 2.809 1.305 3.495.998c.108-.776.417-1.305.76-1.605c-2.665-.3-5.466-1.332-5.466-5.93c0-1.31.465-2.38 1.235-3.22c-.135-.303-.54-1.523.105-3.176c0 0 1.005-.322 3.3 1.23c.96-.267 1.98-.399 3-.405c1.02.006 2.04.138 3 .405c2.28-1.552 3.285-1.23 3.285-1.23c.645 1.653.24 2.873.12 3.176c.765.84 1.23 1.91 1.23 3.22c0 4.61-2.805 5.625-5.475 5.92c.42.36.81 1.096.81 2.22c0 1.606-.015 2.896-.015 3.286c0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" class=\"\"></path></svg> is a free, open-source JavaScript library to help you quickly visualize tabular data. It has a concise and (hopefully) memorable API to foster fluency — and plenty of examples to learn from and copy-paste.</p>\n</blockquote>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"https://observablehq.com/@observablehq/plot\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">From the Observable Plot page</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 20q-1.597 0-2.77-.696a4.7 4.7 0 0 1-1.794-1.89a10 10 0 0 1-.916-2.53A13.6 13.6 0 0 1 6.23 12q0-1.149.152-2.2q.15-1.049.556-2.132A6.8 6.8 0 0 1 7.98 5.79a4.7 4.7 0 0 1 1.668-1.293Q10.681 4 12 4q1.597 0 2.77.696a4.7 4.7 0 0 1 1.794 1.89q.627 1.193.916 2.53T17.77 12q0 1.149-.152 2.2a9.8 9.8 0 0 1-.567 2.132a7.2 7.2 0 0 1-1.042 1.878q-.627.796-1.657 1.293q-1.031.498-2.352.497m2.037-5.882c.551-.554.858-1.32.848-2.118q0-1.236-.827-2.118Q13.23 9 12 9t-2.058.882A3 3 0 0 0 9.115 12q0 1.236.827 2.118Q10.77 15 12 15t2.037-.882M12 24c6.372 0 11.538-5.373 11.538-12S18.372 0 12 0S.462 5.373.462 12S5.628 24 12 24\" class=\"\"></path></svg></p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Plot makes it very easy to try out lots of different visual forms without hand-building everything. Because of that, Observable and Plot are a crucial part of the exploratory process of beginning to become acquainted with a dataset and beginning to <a href=\"https://observablehq.com/@ejfox/data-interrogation-template\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">interrogate a dataset</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 20q-1.597 0-2.77-.696a4.7 4.7 0 0 1-1.794-1.89a10 10 0 0 1-.916-2.53A13.6 13.6 0 0 1 6.23 12q0-1.149.152-2.2q.15-1.049.556-2.132A6.8 6.8 0 0 1 7.98 5.79a4.7 4.7 0 0 1 1.668-1.293Q10.681 4 12 4q1.597 0 2.77.696a4.7 4.7 0 0 1 1.794 1.89q.627 1.193.916 2.53T17.77 12q0 1.149-.152 2.2a9.8 9.8 0 0 1-.567 2.132a7.2 7.2 0 0 1-1.042 1.878q-.627.796-1.657 1.293q-1.031.498-2.352.497m2.037-5.882c.551-.554.858-1.32.848-2.118q0-1.236-.827-2.118Q13.23 9 12 9t-2.058.882A3 3 0 0 0 9.115 12q0 1.236.827 2.118Q10.77 15 12 15t2.037-.882M12 24c6.372 0 11.538-5.373 11.538-12S18.372 0 12 0S.462 5.373.462 12S5.628 24 12 24\" class=\"\"></path></svg></p>\n<h3 class=\"prose-sm text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"getting-set-up\">Getting set up</h3>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><code class=\"prose-sm font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">npx nuxi init PROJECT-NAME</code> installs a blank <a href=\"https://nuxt.com\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Nuxt 3</a> project ready to go.</p>\n<h4 class=\"\" id=\"getting-observable-plot-into-vue\">Getting Observable Plot into Vue</h4>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><code class=\"prose-sm font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">yarn add @observablehq/plot</code> adds Plot to our project.</p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Then, at the top of any component where we want to use Plot, we need to import it: <code class=\"prose-sm font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">import * as Plot from '@observablehq/plot'</code></p>\n<h3 class=\"prose-sm text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"making-a-chart-with-plot-and-rendering-with-vue\">Making a chart with Plot and rendering with Vue</h3>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Vue and Observable Plot live in slightly different worlds that we need to bridge a bit. When we change our data, we want our Plot to automatically re-render. When we resize our page, we also want our Plot to automatically re-render. We will need to handle some of that in the way we build and call our chart within Vue.</p>\n<h4 class=\"\" id=\"making-a-function-to-make-the-viz\">Making a function to make the viz</h4>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">function</span><span style=\"color:#FFD173\"> makePlotLineGraph</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">city</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> targetContainerId</span><span style=\"color:#CCCAC2\">) {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> chartPlot </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> Plot</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">plot</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\twidth</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#DFBFFF\"> 500</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\theight</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#DFBFFF\"> 500</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\tstyle</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\t\tbackground</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> \"black\"</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\t\tcolor</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> \"white\"</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\t}</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  </span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">return</span><span style=\"color:#CCCAC2\"> chartPlot</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"function makePlotLineGraph(city, targetContainerId) {\nconst chartPlot = Plot.plot({\n\twidth: 500,\n\theight: 500,\n\tstyle: {\n\t\tbackground: &#x22;black&#x22;,\n\t\tcolor: &#x22;white&#x22;\n\t}\n})\n  \nreturn chartPlot\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 class=\"\" id=\"getting-the-data-and-rendering-it\">Getting the data and rendering it</h4>\n<h4 class=\"\" id=\"triggering-chart-updates-when-the-data-changes\">Triggering chart updates when the data changes</h4>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">First we load the data using fetch:</p>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFD173\">fetch</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'/cities.csv'</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">then</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">response</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> response</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">text</span><span style=\"color:#CCCAC2\">())</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">then</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">data</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Set all of the city data</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">cities</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFD173\"> csvParse</span><span style=\"color:#CCCAC2\">(data)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Set the city data for the active city based on the prop</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> cities</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">find</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">city</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">name </span><span style=\"color:#F29E74\">===</span><span style=\"color:#CCCAC2\"> props</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">cityName)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span><span style=\"color:#CCCAC2B3\">;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"fetch(&#x27;/cities.csv&#x27;)\n.then((response) => response.text())\n.then((data) => {\n// Set all of the city data\ncities.value = csvParse(data);\n\n// Set the city data for the active city based on the prop\ncity.value = cities.value.find((city) => city.name === props.cityName);\n});\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">We need a computed property that holds the HTML of the rendered Plot based on the data we just updated.</p>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// make a computed that gets the HTML for the chart</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> chartHTML </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFD173\"> computed</span><span style=\"color:#CCCAC2\">(() </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">if</span><span style=\"color:#CCCAC2\"> (city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value) {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// If we have a city, make a chart</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">return</span><span style=\"color:#FFD173\"> makePlotLineGraph</span><span style=\"color:#CCCAC2\">(city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#D5FF80\"> 'chart'</span><span style=\"color:#CCCAC2\">)</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">outerHTML</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">} </span><span style=\"color:#FFAD66\">else</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Otherwise, return an empty div</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">return</span><span style=\"color:#D5FF80\"> '&#x3C;div>&#x3C;/div>'</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"// make a computed that gets the HTML for the chart\n\nconst chartHTML = computed(() => {\nif (city.value) {\n// If we have a city, make a chart\nreturn makePlotLineGraph(city.value, &#x27;chart&#x27;).outerHTML\n} else {\n// Otherwise, return an empty div\nreturn &#x27;<div></div>&#x27;\n}\n})\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Then we render this computed HTML with a simple template</p>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"vue\" data-theme=\"\"><code data-language=\"vue\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#5CCFE680\">&#x3C;</span><span style=\"color:#5CCFE6\">div</span><span style=\"color:#FFD173\"> ref</span><span style=\"color:#CCCAC2B3\">=</span><span style=\"color:#D5FF80\">\"chart\"</span><span style=\"color:#FFD173\"> id</span><span style=\"color:#CCCAC2B3\">=</span><span style=\"color:#D5FF80\">\"chart\"</span><span style=\"color:#FFD173\"> v-html</span><span style=\"color:#CCCAC2B3\">=</span><span style=\"color:#CCCAC2\">\"</span><span style=\"color:#CCCAC2\">chartHTML</span><span style=\"color:#CCCAC2\">\"</span><span style=\"color:#5CCFE680\">>&#x3C;/</span><span style=\"color:#5CCFE6\">div</span><span style=\"color:#5CCFE680\">></span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"<div ref=&#x22;chart&#x22; id=&#x22;chart&#x22; v-html=&#x22;chartHTML&#x22;></div>\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>",
  "html": "<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">#dataviz #howto</p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"https://observablehq.com/@observablehq/plot\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Observable Plot</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 20q-1.597 0-2.77-.696a4.7 4.7 0 0 1-1.794-1.89a10 10 0 0 1-.916-2.53A13.6 13.6 0 0 1 6.23 12q0-1.149.152-2.2q.15-1.049.556-2.132A6.8 6.8 0 0 1 7.98 5.79a4.7 4.7 0 0 1 1.668-1.293Q10.681 4 12 4q1.597 0 2.77.696a4.7 4.7 0 0 1 1.794 1.89q.627 1.193.916 2.53T17.77 12q0 1.149-.152 2.2a9.8 9.8 0 0 1-.567 2.132a7.2 7.2 0 0 1-1.042 1.878q-.627.796-1.657 1.293q-1.031.498-2.352.497m2.037-5.882c.551-.554.858-1.32.848-2.118q0-1.236-.827-2.118Q13.23 9 12 9t-2.058.882A3 3 0 0 0 9.115 12q0 1.236.827 2.118Q10.77 15 12 15t2.037-.882M12 24c6.372 0 11.538-5.373 11.538-12S18.372 0 12 0S.462 5.373.462 12S5.628 24 12 24\" class=\"\"></path></svg> is an awesome tool for quickly sketching and exploring data. It is wonderful when paired with Vue, which can handle user interactions, routing, and state management that can be a bridge between a <a href=\"2022-prototyping-toolkit-%7Cprototyp\" class=\"prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">2022-prototyping-toolkit |prototyp</a>e]] and a functional tool.</p>\n<blockquote class=\"prose-blockquote prose-sm max-w-prose pl-4 border-l-4 border-zinc-300 dark:border-zinc-700 italic my-4 text-zinc-700 dark:text-zinc-300 animate-on-scroll slide-from-left\">\n<p class=\"prose-p prose-sm max-w-prose mb-4 text-zinc-600 dark:text-zinc-400 prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"https://github.com/observablehq/plot\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Observable Plot</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 .297c-6.63 0-12 5.373-12 12c0 5.303 3.438 9.8 8.205 11.385c.6.113.82-.258.82-.577c0-.285-.01-1.04-.015-2.04c-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729c1.205.084 1.838 1.236 1.838 1.236c1.07 1.835 2.809 1.305 3.495.998c.108-.776.417-1.305.76-1.605c-2.665-.3-5.466-1.332-5.466-5.93c0-1.31.465-2.38 1.235-3.22c-.135-.303-.54-1.523.105-3.176c0 0 1.005-.322 3.3 1.23c.96-.267 1.98-.399 3-.405c1.02.006 2.04.138 3 .405c2.28-1.552 3.285-1.23 3.285-1.23c.645 1.653.24 2.873.12 3.176c.765.84 1.23 1.91 1.23 3.22c0 4.61-2.805 5.625-5.475 5.92c.42.36.81 1.096.81 2.22c0 1.606-.015 2.896-.015 3.286c0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" class=\"\"></path></svg> is a free, open-source JavaScript library to help you quickly visualize tabular data. It has a concise and (hopefully) memorable API to foster fluency — and plenty of examples to learn from and copy-paste.</p>\n</blockquote>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"https://observablehq.com/@observablehq/plot\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">From the Observable Plot page</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 20q-1.597 0-2.77-.696a4.7 4.7 0 0 1-1.794-1.89a10 10 0 0 1-.916-2.53A13.6 13.6 0 0 1 6.23 12q0-1.149.152-2.2q.15-1.049.556-2.132A6.8 6.8 0 0 1 7.98 5.79a4.7 4.7 0 0 1 1.668-1.293Q10.681 4 12 4q1.597 0 2.77.696a4.7 4.7 0 0 1 1.794 1.89q.627 1.193.916 2.53T17.77 12q0 1.149-.152 2.2a9.8 9.8 0 0 1-.567 2.132a7.2 7.2 0 0 1-1.042 1.878q-.627.796-1.657 1.293q-1.031.498-2.352.497m2.037-5.882c.551-.554.858-1.32.848-2.118q0-1.236-.827-2.118Q13.23 9 12 9t-2.058.882A3 3 0 0 0 9.115 12q0 1.236.827 2.118Q10.77 15 12 15t2.037-.882M12 24c6.372 0 11.538-5.373 11.538-12S18.372 0 12 0S.462 5.373.462 12S5.628 24 12 24\" class=\"\"></path></svg></p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Plot makes it very easy to try out lots of different visual forms without hand-building everything. Because of that, Observable and Plot are a crucial part of the exploratory process of beginning to become acquainted with a dataset and beginning to <a href=\"https://observablehq.com/@ejfox/data-interrogation-template\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">interrogate a dataset</a><svg class=\"inline-block w-4 h-4 ml-1 opacity-50 dark:opacity-75 group-hover:opacity-100 transition-opacity\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M12 20q-1.597 0-2.77-.696a4.7 4.7 0 0 1-1.794-1.89a10 10 0 0 1-.916-2.53A13.6 13.6 0 0 1 6.23 12q0-1.149.152-2.2q.15-1.049.556-2.132A6.8 6.8 0 0 1 7.98 5.79a4.7 4.7 0 0 1 1.668-1.293Q10.681 4 12 4q1.597 0 2.77.696a4.7 4.7 0 0 1 1.794 1.89q.627 1.193.916 2.53T17.77 12q0 1.149-.152 2.2a9.8 9.8 0 0 1-.567 2.132a7.2 7.2 0 0 1-1.042 1.878q-.627.796-1.657 1.293q-1.031.498-2.352.497m2.037-5.882c.551-.554.858-1.32.848-2.118q0-1.236-.827-2.118Q13.23 9 12 9t-2.058.882A3 3 0 0 0 9.115 12q0 1.236.827 2.118Q10.77 15 12 15t2.037-.882M12 24c6.372 0 11.538-5.373 11.538-12S18.372 0 12 0S.462 5.373.462 12S5.628 24 12 24\" class=\"\"></path></svg></p>\n<h3 class=\"prose-sm text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"getting-set-up\">Getting set up</h3>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><code class=\"prose-sm font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">npx nuxi init PROJECT-NAME</code> installs a blank <a href=\"https://nuxt.com\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"external-link group prose-sm text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Nuxt 3</a> project ready to go.</p>\n<h4 class=\"\" id=\"getting-observable-plot-into-vue\">Getting Observable Plot into Vue</h4>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><code class=\"prose-sm font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">yarn add @observablehq/plot</code> adds Plot to our project.</p>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Then, at the top of any component where we want to use Plot, we need to import it: <code class=\"prose-sm font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">import * as Plot from '@observablehq/plot'</code></p>\n<h3 class=\"prose-sm text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"making-a-chart-with-plot-and-rendering-with-vue\">Making a chart with Plot and rendering with Vue</h3>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Vue and Observable Plot live in slightly different worlds that we need to bridge a bit. When we change our data, we want our Plot to automatically re-render. When we resize our page, we also want our Plot to automatically re-render. We will need to handle some of that in the way we build and call our chart within Vue.</p>\n<h4 class=\"\" id=\"making-a-function-to-make-the-viz\">Making a function to make the viz</h4>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFAD66\">function</span><span style=\"color:#FFD173\"> makePlotLineGraph</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#DFBFFF\">city</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#DFBFFF\"> targetContainerId</span><span style=\"color:#CCCAC2\">) {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> chartPlot </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> Plot</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">plot</span><span style=\"color:#CCCAC2\">({</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\twidth</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#DFBFFF\"> 500</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\theight</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#DFBFFF\"> 500</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\tstyle</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\t\tbackground</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> \"black\"</span><span style=\"color:#CCCAC2B3\">,</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\t\tcolor</span><span style=\"color:#CCCAC2B3\">:</span><span style=\"color:#D5FF80\"> \"white\"</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">\t}</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">  </span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">return</span><span style=\"color:#CCCAC2\"> chartPlot</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"function makePlotLineGraph(city, targetContainerId) {\nconst chartPlot = Plot.plot({\n\twidth: 500,\n\theight: 500,\n\tstyle: {\n\t\tbackground: &#x22;black&#x22;,\n\t\tcolor: &#x22;white&#x22;\n\t}\n})\n  \nreturn chartPlot\n}\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h4 class=\"\" id=\"getting-the-data-and-rendering-it\">Getting the data and rendering it</h4>\n<h4 class=\"\" id=\"triggering-chart-updates-when-the-data-changes\">Triggering chart updates when the data changes</h4>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">First we load the data using fetch:</p>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#FFD173\">fetch</span><span style=\"color:#CCCAC2\">(</span><span style=\"color:#D5FF80\">'/cities.csv'</span><span style=\"color:#CCCAC2\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">then</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">response</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> response</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">text</span><span style=\"color:#CCCAC2\">())</span></span>\n<span data-line=\"\"><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">then</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">data</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Set all of the city data</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">cities</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFD173\"> csvParse</span><span style=\"color:#CCCAC2\">(data)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Set the city data for the active city based on the prop</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value </span><span style=\"color:#F29E74\">=</span><span style=\"color:#CCCAC2\"> cities</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value</span><span style=\"color:#F29E74\">.</span><span style=\"color:#FFD173\">find</span><span style=\"color:#CCCAC2\">((</span><span style=\"color:#DFBFFF\">city</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">name </span><span style=\"color:#F29E74\">===</span><span style=\"color:#CCCAC2\"> props</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">cityName)</span><span style=\"color:#CCCAC2B3\">;</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span><span style=\"color:#CCCAC2B3\">;</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"fetch(&#x27;/cities.csv&#x27;)\n.then((response) => response.text())\n.then((data) => {\n// Set all of the city data\ncities.value = csvParse(data);\n\n// Set the city data for the active city based on the prop\ncity.value = cities.value.find((city) => city.name === props.cityName);\n});\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">We need a computed property that holds the HTML of the rendered Plot based on the data we just updated.</p>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"js\" data-theme=\"\"><code data-language=\"js\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// make a computed that gets the HTML for the chart</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">const</span><span style=\"color:#CCCAC2\"> chartHTML </span><span style=\"color:#F29E74\">=</span><span style=\"color:#FFD173\"> computed</span><span style=\"color:#CCCAC2\">(() </span><span style=\"color:#FFAD66\">=></span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">if</span><span style=\"color:#CCCAC2\"> (city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value) {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// If we have a city, make a chart</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">return</span><span style=\"color:#FFD173\"> makePlotLineGraph</span><span style=\"color:#CCCAC2\">(city</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">value</span><span style=\"color:#CCCAC2B3\">,</span><span style=\"color:#D5FF80\"> 'chart'</span><span style=\"color:#CCCAC2\">)</span><span style=\"color:#F29E74\">.</span><span style=\"color:#CCCAC2\">outerHTML</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">} </span><span style=\"color:#FFAD66\">else</span><span style=\"color:#CCCAC2\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\">// Otherwise, return an empty div</span></span>\n<span data-line=\"\"><span style=\"color:#FFAD66\">return</span><span style=\"color:#D5FF80\"> '&#x3C;div>&#x3C;/div>'</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">}</span></span>\n<span data-line=\"\"><span style=\"color:#CCCAC2\">})</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"// make a computed that gets the HTML for the chart\n\nconst chartHTML = computed(() => {\nif (city.value) {\n// If we have a city, make a chart\nreturn makePlotLineGraph(city.value, &#x27;chart&#x27;).outerHTML\n} else {\n// Otherwise, return an empty div\nreturn &#x27;<div></div>&#x27;\n}\n})\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"prose-p prose-sm max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Then we render this computed HTML with a simple template</p>\n<figure class=\"prose-sm relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"vue\" data-theme=\"\"><code data-language=\"vue\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#5CCFE680\">&#x3C;</span><span style=\"color:#5CCFE6\">div</span><span style=\"color:#FFD173\"> ref</span><span style=\"color:#CCCAC2B3\">=</span><span style=\"color:#D5FF80\">\"chart\"</span><span style=\"color:#FFD173\"> id</span><span style=\"color:#CCCAC2B3\">=</span><span style=\"color:#D5FF80\">\"chart\"</span><span style=\"color:#FFD173\"> v-html</span><span style=\"color:#CCCAC2B3\">=</span><span style=\"color:#CCCAC2\">\"</span><span style=\"color:#CCCAC2\">chartHTML</span><span style=\"color:#CCCAC2\">\"</span><span style=\"color:#5CCFE680\">>&#x3C;/</span><span style=\"color:#5CCFE6\">div</span><span style=\"color:#5CCFE680\">></span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"<div ref=&#x22;chart&#x22; id=&#x22;chart&#x22; v-html=&#x22;chartHTML&#x22;></div>\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>",
  "title": "Using Observable Plot in Vue",
  "metadata": {
    "dek": "In which we use two javascript frameworks to quickly scale from prototype to functional tool",
    "inprogress": true,
    "date": "2022-12-15T15:18:53.000Z",
    "modified": "2024-09-20T04:23:41.000Z",
    "tags": [
      "dataviz",
      "howto",
      "vue"
    ],
    "words": 439,
    "images": 0,
    "links": 6,
    "codeBlocks": 4,
    "headers": {
      "h2": 1
    },
    "toc": [
      {
        "text": "Using Observable Plot in Vue",
        "slug": "using-observable-plot-in-vue",
        "level": "h2",
        "children": [
          {
            "text": "Getting set up",
            "slug": "getting-set-up",
            "level": "h3",
            "children": []
          },
          {
            "text": "Making a chart with Plot and rendering with Vue",
            "slug": "making-a-chart-with-plot-and-rendering-with-vue",
            "level": "h3",
            "children": []
          }
        ]
      }
    ],
    "type": "post",
    "sourcePath": "../../../../../code/website2/content/blog/drafts/_stale/using-observable-plot-in-vue.md",
    "sourceDir": "/Users/ejfox/Library/Mobile Documents/iCloud~md~obsidian/Documents/ejfox/"
  }
}