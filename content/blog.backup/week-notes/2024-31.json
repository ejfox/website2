{
  "slug": "week-notes/2024-31",
  "title": "API keys for Cloudinary",
  "date": "2024-07-29T04:00:00.000Z",
  "type": "weekNote",
  "html": "<h2 id=\"-overview-of-the-week\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#-overview-of-the-week\"><span class=\"icon icon-link\"></span></a>ðŸŒŸ Overview of the Week</h2>\n<p>Got back from Hanging with Ben &#x26; Kevin at Kevin's cabin. On Monday family helped me move out a lot of the big remaining stuff from my apartment in to storage: bookshelves, desk, bedframe. Everyone helped and left exhausted.</p>\n<p>[[2024/my-modern-scrapbook|my-modern-scrapbook]]: wrote a blog post about the Scrapbook system I have been building, which is good, because I realized how much sprawling work I have put into it without a clear understanding of my motivations. Sitting down to write 2000+ words on it made me really think about that side of things, which is good.</p>\n<p>I also figured out it's super easy to get little videos into my blog posts since I already have an Automator action to automatically via a shell script run through an Automator folder action that triggers anytime a new file is added to <code>screenshots</code> - it automatically uploads videos, too, like the ones recorded if I hit CMD+shift+5 and record a little segment of my screen. Once it's uploaded its URL is copied to my clipboard, and I just swap out <code>mp4</code> for <code>gif</code>. It's also nice to set some extra Cloudinary processing params like <code>/q_auto/w_768/e_loop/</code> to make the quality automatic, resize to a width of 768, and loop the gif</p>\n<p>Here's the script that auto-uploads to Cloudinary and appends the screenshot to my weekly note with <a href=\"https://cloudinary.com/documentation/cloudinary_cli\">cld</a></p>\n<figure data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#24292e;color:#e1e4e8\" tabindex=\"0\" data-language=\"bash\" data-theme=\"github-dark\"><code data-language=\"bash\" data-theme=\"github-dark\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#6A737D\">#!/bin/bash</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\"># API keys for Cloudinary</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">export</span><span style=\"color:#E1E4E8\"> CLOUDINARY_URL</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">cloudinary://foo@bar</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\"># Function to get the current year and week number</span></span>\n<span data-line=\"\"><span style=\"color:#B392F0\">get_weekly_note_path</span><span style=\"color:#E1E4E8\">() {</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">  local</span><span style=\"color:#E1E4E8\"> year_week</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">$(</span><span style=\"color:#B392F0\">date</span><span style=\"color:#9ECBFF\"> +%Y-%V</span><span style=\"color:#E1E4E8\">)</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">  local</span><span style=\"color:#E1E4E8\"> note_path</span><span style=\"color:#F97583\">=</span><span style=\"color:#9ECBFF\">\"/Users/ejfox/Library/Mobile Documents/iCloud~md~obsidian/Documents/ejfox/Week Notes/${</span><span style=\"color:#E1E4E8\">year_week</span><span style=\"color:#9ECBFF\">}.md\"</span></span>\n<span data-line=\"\"><span style=\"color:#79B8FF\">  echo</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$note_path</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#E1E4E8\">}</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\"># Iterate over each passed argument</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">for</span><span style=\"color:#E1E4E8\"> file </span><span style=\"color:#F97583\">in</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#79B8FF\">$@</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">do</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">  # Check if the file exists</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">  if</span><span style=\"color:#E1E4E8\"> [ </span><span style=\"color:#F97583\">-f</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$file</span><span style=\"color:#9ECBFF\">\"</span><span style=\"color:#E1E4E8\"> ]; </span><span style=\"color:#F97583\">then</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">    # Upload to Cloudinary and capture output</span></span>\n<span data-line=\"\"><span style=\"color:#E1E4E8\">    upload_output</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">$(</span><span style=\"color:#B392F0\">/opt/homebrew/bin/cld</span><span style=\"color:#9ECBFF\"> uploader</span><span style=\"color:#9ECBFF\"> upload</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$file</span><span style=\"color:#9ECBFF\">\"</span><span style=\"color:#9ECBFF\"> use_filename=</span><span style=\"color:#79B8FF\">true</span><span style=\"color:#9ECBFF\"> unique_filename=</span><span style=\"color:#79B8FF\">false</span><span style=\"color:#F97583\"> 2>&#x26;1</span><span style=\"color:#E1E4E8\">)</span></span>\n<span data-line=\"\"><span style=\"color:#E1E4E8\">    upload_exit_status</span><span style=\"color:#F97583\">=</span><span style=\"color:#79B8FF\">$?</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\">    # Check if the upload was successful</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">    if</span><span style=\"color:#E1E4E8\"> [ $upload_exit_status </span><span style=\"color:#F97583\">-eq</span><span style=\"color:#79B8FF\"> 0</span><span style=\"color:#E1E4E8\"> ]; </span><span style=\"color:#F97583\">then</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">      # Attempt to extract the URL using the absolute path for jq</span></span>\n<span data-line=\"\"><span style=\"color:#E1E4E8\">      url</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">$(</span><span style=\"color:#79B8FF\">echo</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$upload_output</span><span style=\"color:#9ECBFF\">\"</span><span style=\"color:#F97583\"> |</span><span style=\"color:#B392F0\"> /opt/homebrew/bin/jq</span><span style=\"color:#79B8FF\"> -r</span><span style=\"color:#9ECBFF\"> '.url'</span><span style=\"color:#F97583\"> 2></span><span style=\"color:#9ECBFF\">/dev/null</span><span style=\"color:#E1E4E8\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\">      # Check if the URL is non-empty</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">      if</span><span style=\"color:#E1E4E8\"> [ </span><span style=\"color:#F97583\">-n</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$url</span><span style=\"color:#9ECBFF\">\"</span><span style=\"color:#E1E4E8\"> ]; </span><span style=\"color:#F97583\">then</span></span>\n<span data-line=\"\"><span style=\"color:#79B8FF\">        echo</span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$url</span><span style=\"color:#9ECBFF\">\"</span><span style=\"color:#F97583\"> |</span><span style=\"color:#B392F0\"> pbcopy</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">        # Display success notification with the URL</span></span>\n<span data-line=\"\"><span style=\"color:#B392F0\">        osascript</span><span style=\"color:#79B8FF\"> -e</span><span style=\"color:#9ECBFF\"> \"display notification </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Uploaded </span><span style=\"color:#E1E4E8\">$file</span><span style=\"color:#9ECBFF\"> to Cloudinary and URL copied to clipboard: </span><span style=\"color:#E1E4E8\">$url</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\"> with title </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Screenshot Upload</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\">        # Get the weekly note file path</span></span>\n<span data-line=\"\"><span style=\"color:#E1E4E8\">        weekly_note_path</span><span style=\"color:#F97583\">=</span><span style=\"color:#E1E4E8\">$(</span><span style=\"color:#B392F0\">get_weekly_note_path</span><span style=\"color:#E1E4E8\">)</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\">        # Append the markdown image format to the weekly note file</span></span>\n<span data-line=\"\"><span style=\"color:#79B8FF\">        echo</span><span style=\"color:#79B8FF\"> -e</span><span style=\"color:#9ECBFF\"> \"\\n![Screenshot - </span><span style=\"color:#E1E4E8\">$current_date_time</span><span style=\"color:#9ECBFF\"> - </span><span style=\"color:#E1E4E8\">$filename</span><span style=\"color:#9ECBFF\">](</span><span style=\"color:#E1E4E8\">$url</span><span style=\"color:#9ECBFF\">)\"</span><span style=\"color:#F97583\"> >></span><span style=\"color:#9ECBFF\"> \"</span><span style=\"color:#E1E4E8\">$weekly_note_path</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"> </span>\n<span data-line=\"\"><span style=\"color:#6A737D\">        # Display notification for appending to the weekly note</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">        # osascript -e \"display notification \\\"Appended screenshot URL to weekly note: $weekly_note_path\\\" with title \\\"Weekly Note Update\\\"\"</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">      else</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">        # Display notification for empty URL</span></span>\n<span data-line=\"\"><span style=\"color:#B392F0\">        osascript</span><span style=\"color:#79B8FF\"> -e</span><span style=\"color:#9ECBFF\"> \"display notification </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Failed to extract URL from output</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\"> with title </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Debug</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">      fi</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">    else</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">      # Display notification for upload failure</span></span>\n<span data-line=\"\"><span style=\"color:#B392F0\">      osascript</span><span style=\"color:#79B8FF\"> -e</span><span style=\"color:#9ECBFF\"> \"display notification </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Failed to upload </span><span style=\"color:#E1E4E8\">$file</span><span style=\"color:#9ECBFF\"> to Cloudinary. Error: </span><span style=\"color:#E1E4E8\">$upload_output</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\"> with title </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Screenshot Upload</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">    fi</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">  else</span></span>\n<span data-line=\"\"><span style=\"color:#6A737D\">    # Display notification for file not found</span></span>\n<span data-line=\"\"><span style=\"color:#B392F0\">    osascript</span><span style=\"color:#79B8FF\"> -e</span><span style=\"color:#9ECBFF\"> \"display notification </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">File does not exist: </span><span style=\"color:#E1E4E8\">$file</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\"> with title </span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">Debug</span><span style=\"color:#79B8FF\">\\\"</span><span style=\"color:#9ECBFF\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">  fi</span></span>\n<span data-line=\"\"><span style=\"color:#F97583\">done</span></span>\n<span data-line=\"\"> </span></code></pre></figure>\n<h2 id=\"projects-worked-on\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#projects-worked-on\"><span class=\"icon icon-link\"></span></a>Projects Worked On</h2>\n<h3 id=\"spliff--espresso\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#spliff--espresso\"><span class=\"icon icon-link\"></span></a>Spliff &#x26; Espresso</h3>\n<ul>\n<li>Bought &#x3C;spliffandespresso.com> and got @spliffandespresso on IG</li>\n<li>Did some experimentation with colors and typefaces for the logo</li>\n</ul>\n<h2 id=\"creative-endeavors\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#creative-endeavors\"><span class=\"icon icon-link\"></span></a>Creative Endeavors</h2>\n<p>I've been playing a lot with <a href=\"https://cardinal.kx.studio\">Cardinal</a> the free and open-source modular synth, and it's a great way to lose hours of your life to tweaking knobs and dragging cables. It absorbs time almost as well as <a href=\"https://store.steampowered.com/app/1158310/Crusader_Kings_III/\">Crusader Kings 3</a></p>\n<hr>\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722536061/Screenshot_2024-08-01_at_2.14.04_PM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722573787/Screenshot_2024-08-02_at_12.42.54_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722609608/Screenshot_2024-08-02_at_10.39.55_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722609675/Screenshot_2024-08-02_at_10.41.03_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722609689/Screenshot_2024-08-02_at_10.41.15_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722609820/Screenshot_2024-08-02_at_10.43.12_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722609879/Screenshot_2024-08-02_at_10.44.24_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722610045/Screenshot_2024-08-02_at_10.47.11_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/video/upload/v1722610907/Screen_Recording_2024-08-02_at_11.00.13_AM.mov\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722612330/Screenshot_2024-08-02_at_11.25.18_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722612365/Screenshot_2024-08-02_at_11.25.53_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722614112/Screenshot_2024-08-02_at_11.55.00_AM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722618320/Screenshot_2024-08-02_at_1.05.07_PM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722643343/Screenshot_2024-08-02_at_8.01.35_PM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722643831/Screenshot_2024-08-02_at_8.09.58_PM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/video/upload/v1722644212/Screen_Recording_2024-08-02_at_8.13.46_PM.mov\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722703810/Screenshot_2024-08-03_at_12.49.46_PM.png\" alt=\"Screenshot - - \">\n<img src=\"http://res.cloudinary.com/ejf/image/upload/v1722703817/Screenshot_2024-08-03_at_12.50.03_PM.png\" alt=\"Screenshot - - \">",
  "modified": "2024-10-14T23:49:47.000Z",
  "description": "",
  "dek": "In which the author reflects on building a Scrapbook system, experiments with a modular synth, and efficiently uploads videos to their blog posts via Cloudinary.",
  "url": "",
  "tags": [
    "weekly-notes",
    "reflections",
    "progress",
    "coding",
    "automation",
    "music",
    "health"
  ],
  "hidden": false,
  "draft": false,
  "wordCount": 639,
  "readingTime": 3,
  "imageCount": 19,
  "linkCount": 22,
  "share": true
}