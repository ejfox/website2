{
  "content": "<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Wrapped up big, exciting client project that I am really happy with. They had a lot of cool ideas and pushed for some really radical features that I ended up really proud of.</p>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"compiling-framework-docs-for-informed-ai-context\">Compiling framework docs for informed AI context</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">There are two libraries that I use a lot that I often want the robot to think about first when helping me find solutions: <a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">VueUse</a> and <a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Nuxt UI</a> - these frameworks are full of components and composables that make repeated patterns really easy, but often I find the robot doesn't know to use them, or how to call them properly, and they will always be changing and improving faster than an LLM corpus.</p>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Step one to giving the robot the context is to clone the documentation, and combine all of the documentation markdown files into one markdown file that can be easily moved elsewhere.</p>\n<figure class=\"prose-lg relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#73D0FF\">cat</span><span style=\"color:#CCCAC2\"> $(</span><span style=\"color:#73D0FF\">find</span><span style=\"color:#D5FF80\"> .</span><span style=\"color:#95E6CB\"> -name</span><span style=\"color:#D5FF80\"> \"*.md\"</span><span style=\"color:#95E6CB\"> -type</span><span style=\"color:#D5FF80\"> f</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#F29E74\">></span><span style=\"color:#D5FF80\"> combined.md</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">wc</span><span style=\"color:#95E6CB\"> -l</span><span style=\"color:#D5FF80\"> combined.md</span><span style=\"color:#B8CFE680;font-style:italic\"> # 6945 combined.md</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"cat $(find . -name &#x22;*.md&#x22; -type f) > combined.md\nwc -l combined.md # 6945 combined.md\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Maybe we also want to know how many tokens that is, we can use the <a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">TikToken CLI</a></p>\n<figure class=\"prose-lg relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#73D0FF\">$</span><span style=\"color:#D5FF80\"> cat</span><span style=\"color:#D5FF80\"> ~/code/nuxt-ui/docs/content/combined.md</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> ~/code/tiktoken-cli/./tiktoken-cli</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># 37163 tokens</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"$ cat ~/code/nuxt-ui/docs/content/combined.md | ~/code/tiktoken-cli/./tiktoken-cli\n# 37163 tokens\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"evaluating-command-running-capabilities\">Evaluating command-running capabilities</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">As I look into non-OpenAI LLMs to power parts of Coach Artie <a href=\"\" class=\"internal-link prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">How I Built Coach Artie</a> I think that I need to create some repeatable tests that help me evaluate how well alternatives do in a few areas.</p>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">One thing that I do now is allow the robot to call capabilities in the text of the response. If I detect a capability, I run it with the arguments supplied by the model, and add the response as a system message. Right now calling a capability looks like <code class=\"prose-lg font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">module:method(arg1, arg2)</code> - but the robot has sometimes struggled with that. I've also heard that due to the way that characters tokenize, it's easier to get the robot to improvise new method calls by using spaces, rather than special characters. I am also curious at how an XML style approach like <code class=\"prose-lg font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">&#x3C;Module method arg2=\"test\"> arg1 &#x3C;/Module></code> might compare to other syntaxes. I would also like to test different models abilities to \"chain\" capabilities, that is, call for other functionalities repeatedly until they get their answer.</p>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"exif-photo-printer\">EXIF Photo Printer</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">I want to build a tool that will easily allow me to take a folder of images, and add a border and some metadata that I can then send to be printed as 4x5s at Walgreens. I like having the metadata on the physical photos, but it's annoying to do this, and I don't want to have to rely on third party tools like Lightroom for it.</p>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"experiments-with-tres-js\">Experiments with Tres JS</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">TresJS</a> is a Vue/Nuxt wrapper for Three.js and makes it pretty easy to make reactive 3D scenes without spending a ton of time writing animation loops and importing a thousand things. Definitely want to play around with using it more.</p>\n<h2 class=\"prose-lg text-3xl font-semibold mb-4 mt-8 max-w-prose border-b border-zinc-200 dark:border-zinc-800 pb-2 md:pr-12 animate-on-scroll slide-from-left\" id=\"-creative-endeavors\">🎨 Creative Endeavors</h2>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Bought some small wood panels to try to do gouache on - treated the surface with 2 coats of mod podge so that the wood pattern is still visible.</p>\n<h2 class=\"prose-lg text-3xl font-semibold mb-4 mt-8 max-w-prose border-b border-zinc-200 dark:border-zinc-800 pb-2 md:pr-12 animate-on-scroll slide-from-left\" id=\"-technical-accomplishments\">💡 Technical Accomplishments</h2>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"npm-search-visualization\"><a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">NPM Search Visualization</a></h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">I want an easier way to compare different npm packages that solve the same problem; I want to visualize various properties like the size, last commit, and other indicators and make a more intuitive interface for selecting a package over the default search.</p>",
  "html": "<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Wrapped up big, exciting client project that I am really happy with. They had a lot of cool ideas and pushed for some really radical features that I ended up really proud of.</p>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"compiling-framework-docs-for-informed-ai-context\">Compiling framework docs for informed AI context</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">There are two libraries that I use a lot that I often want the robot to think about first when helping me find solutions: <a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">VueUse</a> and <a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">Nuxt UI</a> - these frameworks are full of components and composables that make repeated patterns really easy, but often I find the robot doesn't know to use them, or how to call them properly, and they will always be changing and improving faster than an LLM corpus.</p>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Step one to giving the robot the context is to clone the documentation, and combine all of the documentation markdown files into one markdown file that can be easily moved elsewhere.</p>\n<figure class=\"prose-lg relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#73D0FF\">cat</span><span style=\"color:#CCCAC2\"> $(</span><span style=\"color:#73D0FF\">find</span><span style=\"color:#D5FF80\"> .</span><span style=\"color:#95E6CB\"> -name</span><span style=\"color:#D5FF80\"> \"*.md\"</span><span style=\"color:#95E6CB\"> -type</span><span style=\"color:#D5FF80\"> f</span><span style=\"color:#CCCAC2\">) </span><span style=\"color:#F29E74\">></span><span style=\"color:#D5FF80\"> combined.md</span></span>\n<span data-line=\"\"><span style=\"color:#73D0FF\">wc</span><span style=\"color:#95E6CB\"> -l</span><span style=\"color:#D5FF80\"> combined.md</span><span style=\"color:#B8CFE680;font-style:italic\"> # 6945 combined.md</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"cat $(find . -name &#x22;*.md&#x22; -type f) > combined.md\nwc -l combined.md # 6945 combined.md\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Maybe we also want to know how many tokens that is, we can use the <a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">TikToken CLI</a></p>\n<figure class=\"prose-lg relative rounded-lg overflow-hidden shadow-sm\" data-rehype-pretty-code-figure=\"\"><pre style=\"background-color:#09090b;color:#cccac2\" tabindex=\"0\" data-language=\"bash\" data-theme=\"\"><code data-language=\"bash\" data-theme=\"\" style=\"display: grid;\"><span data-line=\"\"><span style=\"color:#73D0FF\">$</span><span style=\"color:#D5FF80\"> cat</span><span style=\"color:#D5FF80\"> ~/code/nuxt-ui/docs/content/combined.md</span><span style=\"color:#F29E74\"> |</span><span style=\"color:#73D0FF\"> ~/code/tiktoken-cli/./tiktoken-cli</span></span>\n<span data-line=\"\"><span style=\"color:#B8CFE680;font-style:italic\"># 37163 tokens</span></span><button type=\"button\" title=\"Copy code\" aria-label=\"Copy code\" data=\"$ cat ~/code/nuxt-ui/docs/content/combined.md | ~/code/tiktoken-cli/./tiktoken-cli\n# 37163 tokens\" class=\"rehype-pretty-copy\" onclick=\"navigator.clipboard.writeText(this.attributes.data.value);this.classList.add(&#x27;rehype-pretty-copied&#x27;);window.setTimeout(() => this.classList.remove(&#x27;rehype-pretty-copied&#x27;), 3000);\"><span class=\"ready\"></span><span class=\"success\"></span></button><style>:root {--copy-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 48 48'%3E%3Cpath fill='%23adadad' d='M16.187 9.5H12.25a1.75 1.75 0 0 0-1.75 1.75v28.5c0 .967.784 1.75 1.75 1.75h23.5a1.75 1.75 0 0 0 1.75-1.75v-28.5a1.75 1.75 0 0 0-1.75-1.75h-3.937a4.25 4.25 0 0 1-4.063 3h-7.5a4.25 4.25 0 0 1-4.063-3M31.813 7h3.937A4.25 4.25 0 0 1 40 11.25v28.5A4.25 4.25 0 0 1 35.75 44h-23.5A4.25 4.25 0 0 1 8 39.75v-28.5A4.25 4.25 0 0 1 12.25 7h3.937a4.25 4.25 0 0 1 4.063-3h7.5a4.25 4.25 0 0 1 4.063 3M18.5 8.25c0 .966.784 1.75 1.75 1.75h7.5a1.75 1.75 0 1 0 0-3.5h-7.5a1.75 1.75 0 0 0-1.75 1.75'/%3E%3C/svg%3E\");--success-icon: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%2366ff85' d='M9 16.17L5.53 12.7a.996.996 0 1 0-1.41 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71a.996.996 0 1 0-1.41-1.41z'/%3E%3C/svg%3E\");}pre:has(code) {position: relative;}pre button.rehype-pretty-copy {right: 1px;padding: 0;width: 24px;height: 24px;display: flex;margin-top: 2px;margin-right: 8px;position: absolute;border-radius: 25%;backdrop-filter: blur(3px);& span {width: 100%;aspect-ratio: 1 / 1;}& .ready {background-image: var(--copy-icon);}& .success {display: none; background-image: var(--success-icon);}}&.rehype-pretty-copied {& .success {display: block;} & .ready {display: none;}}pre button.rehype-pretty-copy.rehype-pretty-copied {opacity: 1;& .ready { display: none; }& .success { display: block; }}</style></code></pre></figure>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"evaluating-command-running-capabilities\">Evaluating command-running capabilities</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">As I look into non-OpenAI LLMs to power parts of Coach Artie <a href=\"\" class=\"internal-link prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">How I Built Coach Artie</a> I think that I need to create some repeatable tests that help me evaluate how well alternatives do in a few areas.</p>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">One thing that I do now is allow the robot to call capabilities in the text of the response. If I detect a capability, I run it with the arguments supplied by the model, and add the response as a system message. Right now calling a capability looks like <code class=\"prose-lg font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">module:method(arg1, arg2)</code> - but the robot has sometimes struggled with that. I've also heard that due to the way that characters tokenize, it's easier to get the robot to improvise new method calls by using spaces, rather than special characters. I am also curious at how an XML style approach like <code class=\"prose-lg font-mono text-sm bg-zinc-100 dark:bg-zinc-800 rounded px-1.5 py-0.5\">&#x3C;Module method arg2=\"test\"> arg1 &#x3C;/Module></code> might compare to other syntaxes. I would also like to test different models abilities to \"chain\" capabilities, that is, call for other functionalities repeatedly until they get their answer.</p>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"exif-photo-printer\">EXIF Photo Printer</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">I want to build a tool that will easily allow me to take a folder of images, and add a border and some metadata that I can then send to be printed as 4x5s at Walgreens. I like having the metadata on the physical photos, but it's annoying to do this, and I don't want to have to rely on third party tools like Lightroom for it.</p>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"experiments-with-tres-js\">Experiments with Tres JS</h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\"><a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">TresJS</a> is a Vue/Nuxt wrapper for Three.js and makes it pretty easy to make reactive 3D scenes without spending a ton of time writing animation loops and importing a thousand things. Definitely want to play around with using it more.</p>\n<h2 class=\"prose-lg text-3xl font-semibold mb-4 mt-8 max-w-prose border-b border-zinc-200 dark:border-zinc-800 pb-2 md:pr-12 animate-on-scroll slide-from-left\" id=\"-creative-endeavors\">🎨 Creative Endeavors</h2>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">Bought some small wood panels to try to do gouache on - treated the surface with 2 coats of mod podge so that the wood pattern is still visible.</p>\n<h2 class=\"prose-lg text-3xl font-semibold mb-4 mt-8 max-w-prose border-b border-zinc-200 dark:border-zinc-800 pb-2 md:pr-12 animate-on-scroll slide-from-left\" id=\"-technical-accomplishments\">💡 Technical Accomplishments</h2>\n<h3 class=\"prose-lg text-2xl font-medium mb-3 mt-6 max-w-prose md:pr-12 animate-on-scroll slide-from-left\" id=\"npm-search-visualization\"><a href=\"\" class=\"prose-lg text-blue-600 dark:text-blue-400 hover:underline transition-colors duration-200\">NPM Search Visualization</a></h3>\n<p class=\"prose-p prose-lg max-w-prose mb-4 leading-relaxed dark:prose-invert animate-on-scroll\" style=\"max-width: 60ch;\">I want an easier way to compare different npm packages that solve the same problem; I want to visualize various properties like the size, last commit, and other indicators and make a more intuitive interface for selecting a package over the default search.</p>",
  "title": "💻 Key Projects & Progress",
  "metadata": {
    "tags": [
      "weekly-notes",
      "reflections",
      "progress",
      "code",
      "javascript",
      "vue",
      "visualization"
    ],
    "date": "2023-12-11T21:22:43.000Z",
    "modified": "2024-10-14T23:53:39.000Z",
    "dek": "In which the author concludes a successful client project, compiles documentation for informed AI context, evaluates command-running capabilities, plans an EXIF photo printer tool, experiments with Tres JS, and treats wood panels for gouache painting.",
    "robotsMeta": null,
    "title": "💻 Key Projects & Progress",
    "toc": [
      {
        "text": "💻 Key Projects & Progress",
        "slug": "key-projects-progress",
        "level": "h2",
        "children": [
          {
            "text": "Compiling framework docs for informed AI context",
            "slug": "compiling-framework-docs-for-informed-ai-context",
            "level": "h3",
            "children": []
          },
          {
            "text": "Evaluating command-running capabilities",
            "slug": "evaluating-command-running-capabilities",
            "level": "h3",
            "children": []
          },
          {
            "text": "EXIF Photo Printer",
            "slug": "exif-photo-printer",
            "level": "h3",
            "children": []
          },
          {
            "text": "Experiments with Tres JS",
            "slug": "experiments-with-tres-js",
            "level": "h3",
            "children": []
          }
        ]
      },
      {
        "text": "🎨 Creative Endeavors",
        "slug": "creative-endeavors",
        "level": "h2",
        "children": []
      },
      {
        "text": "💡 Technical Accomplishments",
        "slug": "technical-accomplishments",
        "level": "h2",
        "children": [
          {
            "text": "NPM Search Visualization",
            "slug": "npm-search-visualization",
            "level": "h3",
            "children": []
          }
        ]
      }
    ],
    "wordCount": 570,
    "readingTime": 3,
    "imageCount": 0,
    "linkCount": 5,
    "hidden": false,
    "type": "post",
    "visibility": {
      "isHidden": false,
      "isShared": false,
      "isSpecialSection": false,
      "isIndex": false
    }
  }
}